rdb {
  url = "jdbc:mysql://node17:3306/sight"
  user = "root"
  password = "root_root"
  kafka.offset.table = "offset"
  transaction.manager.table="sight.transaction_commited_table"
}
hive {
  # transactional {
  #    tables = ["ad_click_dwi", "ad_fee_dwi"]
  #  }
  jdbc.url = "jdbc:hive2://node17:10000/default"
}

hbase {
  transactional {
    tables = ["uuid.stat"]
  }
  set {
    hbase.zookeeper.quorum = "node14,node17,node15"
    hbase.zookeeper.property.clientPort = "2181"
    spark.serializer = org.apache.spark.serializer.KryoSerializer
  }
}
spark.conf {
  app.name = "ssp-stat-click-dwi"
  streaming.batch.buration = 200
  set {
    mapreduce.job.queuename = queueA
    mapreduce.job.priority = HIGH
    hive.exec.dynamic.partition.mode = nonstrict
    spark.streaming.kafka.maxRatePerPartition = 3000
    spark.serializer = org.apache.spark.serializer.KryoSerializer
    spark.default.parallelism = 10
    hive.merge.mapfiles = true
    hive.merge.mapredfiles = true
    hive.merge.smallfiles.avgsize=1024000000
    spark.sql.shuffle.partitions = 10
    spark.kryoserializer.buffer.max=256
    //    spark.streaming.concurrentJobs = 3
  }
}
modules {

  ////  #点击数
      click_dwr {
        class = "com.mobikok.ssp.data.streaming.module.DWRModule"
        business.date.extract.by = "createTime"
        commit.batch.size = 50000
        dwi.fields.extended=[]
        dwi.uuid.stat.hbase.table = "ssp_click_dwi_uuid_stat"
        dwi.uuid.fields = ["clickId"]
        dwi.uuid.alias = "rowkey"
//        dwi.table = "ssp_click_dwi"
        dwi.kafka.schema = "com.mobikok.ssp.data.streaming.schema.dwi.kafka.SspTrafficDWISchema"
        dwr.groupby.fields = ["publisherId", "subId", "countryId", "carrierId", "sv", "adType", "campaignId", "offerId"]
        dwr.groupby.date.extract.by = "createTime"
        dwr.groupby.aggs = [{
          expr = "count(1)"
          as ="times"
          union = "sum(times)"
        }]
        dwr.table = "ssp_click_dwr"
        dm.save.to.phoenix =  false
        dm.table = "SSP_CLICK_DM_PHOENIX"
        dm.hbase.storable.class = "com.mobikok.ssp.data.streaming.entity.SspClikDM"
        kafka.consumer {
          partitoins = [
            {
              topic = "topic_ad_click"
              partition = 0
            }
          ]
          set {
            bootstrap.servers = "node30:6667,node31:6667,node32:6667"
            key.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
            value.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
            group.id = datastreaming_topic_ad_click_dwr_group1
            auto.offset.reset = "earliest"
            enable.auto.commit = "false"
            request.timeout.ms = 2000
            session.timeout.ms = 1500
            heartbeat.interval.ms = 1000
            #group.min.session.timeout.ms = 1000
            #group.max.session.timeout.ms = 3000
          }
        }
      }
  //
  //  dsp {
  //    class = "com.mobikok.ssp.data.streaming.module.GenericModule"
  //    business.date.extract.by = "timestamp"
  //    commit.batch.size = 50000
  //    dwi.fields.extended=[]
  //    dwi.uuid.stat.hbase.table = "dsp_traffic_dwi_uuid_stat"
  //    dwi.uuid.fields = ["event_key"]
  //    dwi.uuid.alias = "rowkey"
  //    dwi.table = "dsp_traffic_dwi"
  //    dwi.kafka.schema = "com.mobikok.ssp.data.streaming.schema.dwi.kafka.DspTrafficDWISchema"
  //    #dwi.biz.date.extract.by = "createTime"
  //    dwr.groupby.fields = ["publisherId", "subId", "countryId", "carrierId", "sv", "adType", "campaignId", "offerId"]
  //    dwr.groupby.date.extract.by = "createTime"
  //    dwr.groupby.aggs = [{
  //      expr = "count(1)"
  //      as ="times"
  //      union = "sum(times)"
  //    }]
  //    dwr.table = "ssp_click_dwr"
  //    dm.table = "SSP_CLICK_DM_PHOENIX"
  //    dm.hbase.storable.class = "com.mobikok.ssp.data.streaming.entity.SspClikDM"
  //    kafka.consumer {
  //      partitoins = [
  //        {
  //          topic = "topic_ad_click"
  //          partition = 0
  //        }
  //      ]
  //      set {
  //        bootstrap.servers = "node30:6667,node31:6667,node32:6667"
  //        key.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
  //        value.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
  //        group.id = datastreaming_topic_ad_click_group3
  //        auto.offset.reset = "earliest"
  //        enable.auto.commit = "false"
  //        request.timeout.ms = 2000
  //        session.timeout.ms = 1500
  //        heartbeat.interval.ms = 1000
  //        #group.min.session.timeout.ms = 1000
  //        #group.max.session.timeout.ms = 3000
  //      }
  //    }
  //  }
}