rdb {
  url = "jdbc:mysql://node17:3306/sight"
  user = "root"
  password = "root_root"
  kafka.offset.table = "offset"
  transaction.manager.table="sight.transaction_commited_table"
}
hive {
  jdbc.url = "jdbc:hive2://node17:10000/default"
}
message.client.url="http://node14:5555/"
kylin.client.url="http://node14:7070/kylin/api/"
kafka.producer {
  is.async=false
  set {
    bootstrap.servers="node30:6667,node31:6667,node32:6667"
//    bootstrap.servers="104.250.136.138:6667,104.250.133.18:6667,104.250.130.82:6667"
    client.id="niubility_producer"
    acks=-1
    key.serializer="org.apache.kafka.common.serialization.StringSerializer"
    value.serializer="org.apache.kafka.common.serialization.StringSerializer"
  }
}
kafka.consumer {
  set {
    bootstrap.servers = "node30:6667,node31:6667,node32:6667"
    key.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
    value.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
    auto.offset.reset = "earliest"
//    auto.offset.reset = "latest"
    enable.auto.commit = "false"
    request.timeout.ms = 2000
    session.timeout.ms = 1500
    heartbeat.interval.ms = 1000
  }
}
hbase {
  set {
    hbase.zookeeper.quorum = "node106,node107,node108"
    hbase.zookeeper.property.clientPort = "2181"
    spark.serializer = org.apache.spark.serializer.KryoSerializer
  }
}
spark.conf {
  app.name = "send2hbase_new"
//  streaming.batch.buration = 300
  streaming.batch.buration = 100
  set {
    mapreduce.job.queuename = queueA
    mapreduce.job.priority = HIGH
    hive.exec.dynamic.partition.mode = nonstrict
//    spark.streaming.kafka.maxRatePerPartition = 3000
//    spark.streaming.kafka.maxRatePerPartition = 1000
//    spark.streaming.kafka.maxRatePerPartition = 3000
    spark.streaming.kafka.maxRatePerPartition = 900
    #spark.streaming.receiver.maxRate=1000
    spark.serializer = org.apache.spark.serializer.KryoSerializer
    spark.default.parallelism = 5
    hive.merge.mapfiles = true
    hive.merge.mapredfiles = true
    hive.merge.smallfiles.avgsize=1024000000
    spark.sql.shuffle.partitions = 5
    spark.kryoserializer.buffer.max=256
  }
  //    spark.streaming.concurrentJobs = 3
}
modules {

    send2hbase_new {
      class = "com.mobikok.ssp.data.streaming.module.MixModule"
      business.date.extract.by = "createTime"
//      commit.batch.size = 50000
      commit.batch.size =   1
      commit.time.interval = 1800
      dwi.kafka.schema = "com.mobikok.ssp.data.streaming.schema.dwi.kafka.SspTrafficDWISchema"
      dwi.phoenix.enable = true
      dwi.phoenix.table = "SSP_SEND_DWI_PHOENIX"
      dwi.phoenix.hbase.storable.class = "com.mobikok.ssp.data.streaming.entity.SspTrafficDWI"
      kafka.consumer {
        partitoins = [
          {
            topic = "topic_ad_send"
            partition = 0
          },
          {
            topic = "topic_ad_send"
            partition = 1
          },
          {
            topic = "topic_ad_send"
            partition = 2
          },
          {
            topic = "topic_ad_send"
            partition = 3
          },
          {
            topic = "topic_ad_send"
            partition = 4
          },

          {
            topic = "topic_ad_send_new"
            partition = 0
          },
          {
            topic = "topic_ad_send_new"
            partition = 1
          },
          {
            topic = "topic_ad_send_new"
            partition = 2
          },
          {
            topic = "topic_ad_send_new"
            partition = 3
          },
          {
            topic = "topic_ad_send_new"
            partition = 4
          },
          {
            topic = "topic_ad_send_new"
            partition = 5
          },
          {
            topic = "topic_ad_send_new"
            partition = 6
          },
          {
            topic = "topic_ad_send_new"
            partition = 7
          }

        ]
      }
    }
}