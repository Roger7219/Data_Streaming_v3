rdb {
  url = "jdbc:mysql://node17:3306/sight"
  user = "root"
  password = "root_root"
  kafka.offset.table = "offset"
  transaction.manager.table="sight.transaction_commited_table"
}
hive {
  jdbc.url = "jdbc:hive2://node17:10000/default"
}
message.client.url="http://node14:5555/"
kylin.client.url="http://node14:7070/kylin/api/"
kafka.producer {
  is.async=false
  set {
    bootstrap.servers="node30:6667,node31:6667,node32:6667"
    client.id="niubility_producer"
    acks=-1
    key.serializer="org.apache.kafka.common.serialization.StringSerializer"
    value.serializer="org.apache.kafka.common.serialization.StringSerializer"
  }
}
kafka.consumer {
  set {
    bootstrap.servers = "node30:6667,node31:6667,node32:6667"
    key.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
    value.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
    //    auto.offset.reset = "earliest"
    auto.offset.reset = "latest"
    enable.auto.commit = "false"
    request.timeout.ms = 2000
    session.timeout.ms = 1500
    heartbeat.interval.ms = 1000
  }
}

hbase {
  set {
    hbase.zookeeper.quorum = "master,node187"
    hbase.zookeeper.property.clientPort = "2181"
    spark.serializer = org.apache.spark.serializer.KryoSerializer
  }
}
spark.conf {
  app.name = "sync"
  streaming.batch.buration = 90
  set {
    mapreduce.job.queuename = queueA
    mapreduce.job.priority = HIGH
    hive.exec.dynamic.partition.mode = nonstrict
//    spark.streaming.kafka.maxRatePerPartition = 1000
    spark.streaming.kafka.maxRatePerPartition = 1
    #spark.streaming.receiver.maxRate=1000
    spark.serializer = org.apache.spark.serializer.KryoSerializer
    spark.default.parallelism = 10
    hive.merge.mapfiles = true
    hive.merge.mapredfiles = true
    hive.merge.smallfiles.avgsize=1024000000
    spark.sql.shuffle.partitions = 3
    spark.kryoserializer.buffer.max=256
    spark.streaming.concurrentJobs = 1
  }
}
modules {

  // ===================================== day cost/showCount/clickCount ============================================
    sync_mysql_to_hive {
      class = "com.mobikok.ssp.data.streaming.module.MixModule"
      //取日期部分
      business.date.extract.by = "dwrBusinessDate"
      commit.batch.size = 0
      commit.time.interval = 0
      dwi.kafka.schema = "com.mobikok.ssp.data.streaming.schema.dwr.kafka.SspShowDWRSchema"
      dm.handler.enable = true
      dm.handler.setting = [{
        class = "com.mobikok.ssp.data.streaming.handler.dm.offline.SyncMysql2HiveHandler"
        tables = [{
            mysql="tb_demand_account",hive="tb_demand_account",isIncr = true
          },
          {
            mysql="tb_supply_account",hive="tb_supply_account",isIncr = true //
          }
        ]
        //        PRO
//        rdb.url = "jdbc:mysql://104.250.131.130:8904/kok_ssp?rewriteBatchedStatements=true&autoReconnect=true&useUnicode=true&characterEncoding=utf8"
        rdb.url = "jdbc:mysql://mysql.nadx.iifab.com:3306/nadx?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8"
        rdb.user = "root"
        rdb.password = "MPudKqs79V5ZWPHS"

      }]
      kafka.consumer {
        partitoins = [
          {
            topic = "topic_empty"
            partition = 0
          }
        ]
      }
    }
}