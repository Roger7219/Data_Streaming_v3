// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

package com.mobikok.server.bean;

public final class SspEvent {
  private SspEvent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *protoc -I=./proto --java_out=./ ./proto/event.proto
   * </pre>
   *
   * Protobuf enum {@code DEALTYPE}
   */
  public enum DEALTYPE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CPC = 1;</code>
     */
    CPC(1),
    /**
     * <code>CPM = 2;</code>
     */
    CPM(2),
    ;

    /**
     * <code>CPC = 1;</code>
     */
    public static final int CPC_VALUE = 1;
    /**
     * <code>CPM = 2;</code>
     */
    public static final int CPM_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DEALTYPE valueOf(int value) {
      return forNumber(value);
    }

    public static DEALTYPE forNumber(int value) {
      switch (value) {
        case 1: return CPC;
        case 2: return CPM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DEALTYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DEALTYPE> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DEALTYPE>() {
            public DEALTYPE findValueByNumber(int number) {
              return DEALTYPE.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mobikok.server.bean.SspEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final DEALTYPE[] VALUES = values();

    public static DEALTYPE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DEALTYPE(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DEALTYPE)
  }

  public interface RequestInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RequestInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *PUBLISHER唯一ID
     * </pre>
     *
     * <code>required int64 publisher_id = 1;</code>
     */
    boolean hasPublisherId();
    /**
     * <pre>
     *PUBLISHER唯一ID
     * </pre>
     *
     * <code>required int64 publisher_id = 1;</code>
     */
    long getPublisherId();

    /**
     * <pre>
     *APP唯一ID
     * </pre>
     *
     * <code>required int64 app_id = 2;</code>
     */
    boolean hasAppId();
    /**
     * <pre>
     *APP唯一ID
     * </pre>
     *
     * <code>required int64 app_id = 2;</code>
     */
    long getAppId();

    /**
     * <pre>
     *国家ID
     * </pre>
     *
     * <code>required int64 country_id = 3;</code>
     */
    boolean hasCountryId();
    /**
     * <pre>
     *国家ID
     * </pre>
     *
     * <code>required int64 country_id = 3;</code>
     */
    long getCountryId();

    /**
     * <pre>
     *运营商ID
     * </pre>
     *
     * <code>required int64 carrier_id = 4;</code>
     */
    boolean hasCarrierId();
    /**
     * <pre>
     *运营商ID
     * </pre>
     *
     * <code>required int64 carrier_id = 4;</code>
     */
    long getCarrierId();

    /**
     * <pre>
     *IP地址
     * </pre>
     *
     * <code>required string ip = 5;</code>
     */
    boolean hasIp();
    /**
     * <pre>
     *IP地址
     * </pre>
     *
     * <code>required string ip = 5;</code>
     */
    java.lang.String getIp();
    /**
     * <pre>
     *IP地址
     * </pre>
     *
     * <code>required string ip = 5;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <pre>
     *请求内容 ?    
     * </pre>
     *
     * <code>required string raw_request = 6;</code>
     */
    boolean hasRawRequest();
    /**
     * <pre>
     *请求内容 ?    
     * </pre>
     *
     * <code>required string raw_request = 6;</code>
     */
    java.lang.String getRawRequest();
    /**
     * <pre>
     *请求内容 ?    
     * </pre>
     *
     * <code>required string raw_request = 6;</code>
     */
    com.google.protobuf.ByteString
        getRawRequestBytes();
  }
  /**
   * Protobuf type {@code RequestInfo}
   */
  public  static final class RequestInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RequestInfo)
      RequestInfoOrBuilder {
    // Use RequestInfo.newBuilder() to construct.
    private RequestInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestInfo() {
      publisherId_ = 0L;
      appId_ = 0L;
      countryId_ = 0L;
      carrierId_ = 0L;
      ip_ = "";
      rawRequest_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RequestInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              publisherId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              appId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              countryId_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              carrierId_ = input.readInt64();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              ip_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              rawRequest_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mobikok.server.bean.SspEvent.internal_static_RequestInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mobikok.server.bean.SspEvent.internal_static_RequestInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mobikok.server.bean.SspEvent.RequestInfo.class, com.mobikok.server.bean.SspEvent.RequestInfo.Builder.class);
    }

    private int bitField0_;
    public static final int PUBLISHER_ID_FIELD_NUMBER = 1;
    private long publisherId_;
    /**
     * <pre>
     *PUBLISHER唯一ID
     * </pre>
     *
     * <code>required int64 publisher_id = 1;</code>
     */
    public boolean hasPublisherId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *PUBLISHER唯一ID
     * </pre>
     *
     * <code>required int64 publisher_id = 1;</code>
     */
    public long getPublisherId() {
      return publisherId_;
    }

    public static final int APP_ID_FIELD_NUMBER = 2;
    private long appId_;
    /**
     * <pre>
     *APP唯一ID
     * </pre>
     *
     * <code>required int64 app_id = 2;</code>
     */
    public boolean hasAppId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *APP唯一ID
     * </pre>
     *
     * <code>required int64 app_id = 2;</code>
     */
    public long getAppId() {
      return appId_;
    }

    public static final int COUNTRY_ID_FIELD_NUMBER = 3;
    private long countryId_;
    /**
     * <pre>
     *国家ID
     * </pre>
     *
     * <code>required int64 country_id = 3;</code>
     */
    public boolean hasCountryId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *国家ID
     * </pre>
     *
     * <code>required int64 country_id = 3;</code>
     */
    public long getCountryId() {
      return countryId_;
    }

    public static final int CARRIER_ID_FIELD_NUMBER = 4;
    private long carrierId_;
    /**
     * <pre>
     *运营商ID
     * </pre>
     *
     * <code>required int64 carrier_id = 4;</code>
     */
    public boolean hasCarrierId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *运营商ID
     * </pre>
     *
     * <code>required int64 carrier_id = 4;</code>
     */
    public long getCarrierId() {
      return carrierId_;
    }

    public static final int IP_FIELD_NUMBER = 5;
    private volatile java.lang.Object ip_;
    /**
     * <pre>
     *IP地址
     * </pre>
     *
     * <code>required string ip = 5;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *IP地址
     * </pre>
     *
     * <code>required string ip = 5;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *IP地址
     * </pre>
     *
     * <code>required string ip = 5;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RAW_REQUEST_FIELD_NUMBER = 6;
    private volatile java.lang.Object rawRequest_;
    /**
     * <pre>
     *请求内容 ?    
     * </pre>
     *
     * <code>required string raw_request = 6;</code>
     */
    public boolean hasRawRequest() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *请求内容 ?    
     * </pre>
     *
     * <code>required string raw_request = 6;</code>
     */
    public java.lang.String getRawRequest() {
      java.lang.Object ref = rawRequest_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rawRequest_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *请求内容 ?    
     * </pre>
     *
     * <code>required string raw_request = 6;</code>
     */
    public com.google.protobuf.ByteString
        getRawRequestBytes() {
      java.lang.Object ref = rawRequest_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rawRequest_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPublisherId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAppId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCountryId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCarrierId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRawRequest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, publisherId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, appId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, countryId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, carrierId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, ip_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, rawRequest_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, publisherId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, appId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, countryId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, carrierId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, ip_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, rawRequest_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.mobikok.server.bean.SspEvent.RequestInfo)) {
        return super.equals(obj);
      }
      com.mobikok.server.bean.SspEvent.RequestInfo other = (com.mobikok.server.bean.SspEvent.RequestInfo) obj;

      boolean result = true;
      result = result && (hasPublisherId() == other.hasPublisherId());
      if (hasPublisherId()) {
        result = result && (getPublisherId()
            == other.getPublisherId());
      }
      result = result && (hasAppId() == other.hasAppId());
      if (hasAppId()) {
        result = result && (getAppId()
            == other.getAppId());
      }
      result = result && (hasCountryId() == other.hasCountryId());
      if (hasCountryId()) {
        result = result && (getCountryId()
            == other.getCountryId());
      }
      result = result && (hasCarrierId() == other.hasCarrierId());
      if (hasCarrierId()) {
        result = result && (getCarrierId()
            == other.getCarrierId());
      }
      result = result && (hasIp() == other.hasIp());
      if (hasIp()) {
        result = result && getIp()
            .equals(other.getIp());
      }
      result = result && (hasRawRequest() == other.hasRawRequest());
      if (hasRawRequest()) {
        result = result && getRawRequest()
            .equals(other.getRawRequest());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasPublisherId()) {
        hash = (37 * hash) + PUBLISHER_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPublisherId());
      }
      if (hasAppId()) {
        hash = (37 * hash) + APP_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAppId());
      }
      if (hasCountryId()) {
        hash = (37 * hash) + COUNTRY_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCountryId());
      }
      if (hasCarrierId()) {
        hash = (37 * hash) + CARRIER_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCarrierId());
      }
      if (hasIp()) {
        hash = (37 * hash) + IP_FIELD_NUMBER;
        hash = (53 * hash) + getIp().hashCode();
      }
      if (hasRawRequest()) {
        hash = (37 * hash) + RAW_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRawRequest().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mobikok.server.bean.SspEvent.RequestInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.RequestInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.RequestInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.RequestInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.RequestInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.RequestInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.RequestInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.RequestInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.RequestInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.RequestInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mobikok.server.bean.SspEvent.RequestInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RequestInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RequestInfo)
        com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mobikok.server.bean.SspEvent.internal_static_RequestInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mobikok.server.bean.SspEvent.internal_static_RequestInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mobikok.server.bean.SspEvent.RequestInfo.class, com.mobikok.server.bean.SspEvent.RequestInfo.Builder.class);
      }

      // Construct using com.mobikok.server.bean.SspEvent.RequestInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        publisherId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        appId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        countryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        carrierId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        rawRequest_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mobikok.server.bean.SspEvent.internal_static_RequestInfo_descriptor;
      }

      public com.mobikok.server.bean.SspEvent.RequestInfo getDefaultInstanceForType() {
        return com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance();
      }

      public com.mobikok.server.bean.SspEvent.RequestInfo build() {
        com.mobikok.server.bean.SspEvent.RequestInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mobikok.server.bean.SspEvent.RequestInfo buildPartial() {
        com.mobikok.server.bean.SspEvent.RequestInfo result = new com.mobikok.server.bean.SspEvent.RequestInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.publisherId_ = publisherId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.appId_ = appId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.countryId_ = countryId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.carrierId_ = carrierId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rawRequest_ = rawRequest_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mobikok.server.bean.SspEvent.RequestInfo) {
          return mergeFrom((com.mobikok.server.bean.SspEvent.RequestInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mobikok.server.bean.SspEvent.RequestInfo other) {
        if (other == com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance()) return this;
        if (other.hasPublisherId()) {
          setPublisherId(other.getPublisherId());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasCountryId()) {
          setCountryId(other.getCountryId());
        }
        if (other.hasCarrierId()) {
          setCarrierId(other.getCarrierId());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000010;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasRawRequest()) {
          bitField0_ |= 0x00000020;
          rawRequest_ = other.rawRequest_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPublisherId()) {
          return false;
        }
        if (!hasAppId()) {
          return false;
        }
        if (!hasCountryId()) {
          return false;
        }
        if (!hasCarrierId()) {
          return false;
        }
        if (!hasIp()) {
          return false;
        }
        if (!hasRawRequest()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mobikok.server.bean.SspEvent.RequestInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mobikok.server.bean.SspEvent.RequestInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long publisherId_ ;
      /**
       * <pre>
       *PUBLISHER唯一ID
       * </pre>
       *
       * <code>required int64 publisher_id = 1;</code>
       */
      public boolean hasPublisherId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *PUBLISHER唯一ID
       * </pre>
       *
       * <code>required int64 publisher_id = 1;</code>
       */
      public long getPublisherId() {
        return publisherId_;
      }
      /**
       * <pre>
       *PUBLISHER唯一ID
       * </pre>
       *
       * <code>required int64 publisher_id = 1;</code>
       */
      public Builder setPublisherId(long value) {
        bitField0_ |= 0x00000001;
        publisherId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *PUBLISHER唯一ID
       * </pre>
       *
       * <code>required int64 publisher_id = 1;</code>
       */
      public Builder clearPublisherId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        publisherId_ = 0L;
        onChanged();
        return this;
      }

      private long appId_ ;
      /**
       * <pre>
       *APP唯一ID
       * </pre>
       *
       * <code>required int64 app_id = 2;</code>
       */
      public boolean hasAppId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *APP唯一ID
       * </pre>
       *
       * <code>required int64 app_id = 2;</code>
       */
      public long getAppId() {
        return appId_;
      }
      /**
       * <pre>
       *APP唯一ID
       * </pre>
       *
       * <code>required int64 app_id = 2;</code>
       */
      public Builder setAppId(long value) {
        bitField0_ |= 0x00000002;
        appId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *APP唯一ID
       * </pre>
       *
       * <code>required int64 app_id = 2;</code>
       */
      public Builder clearAppId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        appId_ = 0L;
        onChanged();
        return this;
      }

      private long countryId_ ;
      /**
       * <pre>
       *国家ID
       * </pre>
       *
       * <code>required int64 country_id = 3;</code>
       */
      public boolean hasCountryId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *国家ID
       * </pre>
       *
       * <code>required int64 country_id = 3;</code>
       */
      public long getCountryId() {
        return countryId_;
      }
      /**
       * <pre>
       *国家ID
       * </pre>
       *
       * <code>required int64 country_id = 3;</code>
       */
      public Builder setCountryId(long value) {
        bitField0_ |= 0x00000004;
        countryId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *国家ID
       * </pre>
       *
       * <code>required int64 country_id = 3;</code>
       */
      public Builder clearCountryId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        countryId_ = 0L;
        onChanged();
        return this;
      }

      private long carrierId_ ;
      /**
       * <pre>
       *运营商ID
       * </pre>
       *
       * <code>required int64 carrier_id = 4;</code>
       */
      public boolean hasCarrierId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *运营商ID
       * </pre>
       *
       * <code>required int64 carrier_id = 4;</code>
       */
      public long getCarrierId() {
        return carrierId_;
      }
      /**
       * <pre>
       *运营商ID
       * </pre>
       *
       * <code>required int64 carrier_id = 4;</code>
       */
      public Builder setCarrierId(long value) {
        bitField0_ |= 0x00000008;
        carrierId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *运营商ID
       * </pre>
       *
       * <code>required int64 carrier_id = 4;</code>
       */
      public Builder clearCarrierId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        carrierId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object ip_ = "";
      /**
       * <pre>
       *IP地址
       * </pre>
       *
       * <code>required string ip = 5;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *IP地址
       * </pre>
       *
       * <code>required string ip = 5;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ip_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *IP地址
       * </pre>
       *
       * <code>required string ip = 5;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *IP地址
       * </pre>
       *
       * <code>required string ip = 5;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IP地址
       * </pre>
       *
       * <code>required string ip = 5;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IP地址
       * </pre>
       *
       * <code>required string ip = 5;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object rawRequest_ = "";
      /**
       * <pre>
       *请求内容 ?    
       * </pre>
       *
       * <code>required string raw_request = 6;</code>
       */
      public boolean hasRawRequest() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *请求内容 ?    
       * </pre>
       *
       * <code>required string raw_request = 6;</code>
       */
      public java.lang.String getRawRequest() {
        java.lang.Object ref = rawRequest_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            rawRequest_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *请求内容 ?    
       * </pre>
       *
       * <code>required string raw_request = 6;</code>
       */
      public com.google.protobuf.ByteString
          getRawRequestBytes() {
        java.lang.Object ref = rawRequest_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rawRequest_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *请求内容 ?    
       * </pre>
       *
       * <code>required string raw_request = 6;</code>
       */
      public Builder setRawRequest(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        rawRequest_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *请求内容 ?    
       * </pre>
       *
       * <code>required string raw_request = 6;</code>
       */
      public Builder clearRawRequest() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rawRequest_ = getDefaultInstance().getRawRequest();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *请求内容 ?    
       * </pre>
       *
       * <code>required string raw_request = 6;</code>
       */
      public Builder setRawRequestBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        rawRequest_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RequestInfo)
    }

    // @@protoc_insertion_point(class_scope:RequestInfo)
    private static final com.mobikok.server.bean.SspEvent.RequestInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mobikok.server.bean.SspEvent.RequestInfo();
    }

    public static com.mobikok.server.bean.SspEvent.RequestInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RequestInfo>
        PARSER = new com.google.protobuf.AbstractParser<RequestInfo>() {
      public RequestInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RequestInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestInfo> getParserForType() {
      return PARSER;
    }

    public com.mobikok.server.bean.SspEvent.RequestInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TradeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TradeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *交易类型
     * </pre>
     *
     * <code>optional .DEALTYPE deal_type = 11;</code>
     */
    boolean hasDealType();
    /**
     * <pre>
     *交易类型
     * </pre>
     *
     * <code>optional .DEALTYPE deal_type = 11;</code>
     */
    com.mobikok.server.bean.SspEvent.DEALTYPE getDealType();

    /**
     * <pre>
     *DSP唯一ID, winner
     * </pre>
     *
     * <code>optional int64 dsp_id = 10;</code>
     */
    boolean hasDspId();
    /**
     * <pre>
     *DSP唯一ID, winner
     * </pre>
     *
     * <code>optional int64 dsp_id = 10;</code>
     */
    long getDspId();

    /**
     * <pre>
     *竞价
     * </pre>
     *
     * <code>optional double bid_price = 12;</code>
     */
    boolean hasBidPrice();
    /**
     * <pre>
     *竞价
     * </pre>
     *
     * <code>optional double bid_price = 12;</code>
     */
    double getBidPrice();

    /**
     * <pre>
     *返回内容    
     * </pre>
     *
     * <code>optional double clear_price = 22;</code>
     */
    boolean hasClearPrice();
    /**
     * <pre>
     *返回内容    
     * </pre>
     *
     * <code>optional double clear_price = 22;</code>
     */
    double getClearPrice();

    /**
     * <pre>
     *渠道竞价
     * </pre>
     *
     * <code>optional double media_price = 13;</code>
     */
    boolean hasMediaPrice();
    /**
     * <pre>
     *渠道竞价
     * </pre>
     *
     * <code>optional double media_price = 13;</code>
     */
    double getMediaPrice();

    /**
     * <pre>
     *中签URL
     * </pre>
     *
     * <code>optional string win_notice_url = 15;</code>
     */
    boolean hasWinNoticeUrl();
    /**
     * <pre>
     *中签URL
     * </pre>
     *
     * <code>optional string win_notice_url = 15;</code>
     */
    java.lang.String getWinNoticeUrl();
    /**
     * <pre>
     *中签URL
     * </pre>
     *
     * <code>optional string win_notice_url = 15;</code>
     */
    com.google.protobuf.ByteString
        getWinNoticeUrlBytes();

    /**
     * <pre>
     *点击URL
     * </pre>
     *
     * <code>optional string click_url = 16;</code>
     */
    boolean hasClickUrl();
    /**
     * <pre>
     *点击URL
     * </pre>
     *
     * <code>optional string click_url = 16;</code>
     */
    java.lang.String getClickUrl();
    /**
     * <pre>
     *点击URL
     * </pre>
     *
     * <code>optional string click_url = 16;</code>
     */
    com.google.protobuf.ByteString
        getClickUrlBytes();

    /**
     * <pre>
     *pixelUrl
     * </pre>
     *
     * <code>optional string pixel_url = 17;</code>
     */
    boolean hasPixelUrl();
    /**
     * <pre>
     *pixelUrl
     * </pre>
     *
     * <code>optional string pixel_url = 17;</code>
     */
    java.lang.String getPixelUrl();
    /**
     * <pre>
     *pixelUrl
     * </pre>
     *
     * <code>optional string pixel_url = 17;</code>
     */
    com.google.protobuf.ByteString
        getPixelUrlBytes();

    /**
     * <pre>
     *返回内容
     * </pre>
     *
     * <code>optional string raw_response = 21;</code>
     */
    boolean hasRawResponse();
    /**
     * <pre>
     *返回内容
     * </pre>
     *
     * <code>optional string raw_response = 21;</code>
     */
    java.lang.String getRawResponse();
    /**
     * <pre>
     *返回内容
     * </pre>
     *
     * <code>optional string raw_response = 21;</code>
     */
    com.google.protobuf.ByteString
        getRawResponseBytes();
  }
  /**
   * Protobuf type {@code TradeInfo}
   */
  public  static final class TradeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TradeInfo)
      TradeInfoOrBuilder {
    // Use TradeInfo.newBuilder() to construct.
    private TradeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TradeInfo() {
      dealType_ = 1;
      dspId_ = 0L;
      bidPrice_ = 0D;
      clearPrice_ = 0D;
      mediaPrice_ = 0D;
      winNoticeUrl_ = "";
      clickUrl_ = "";
      pixelUrl_ = "";
      rawResponse_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TradeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 80: {
              bitField0_ |= 0x00000002;
              dspId_ = input.readInt64();
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              com.mobikok.server.bean.SspEvent.DEALTYPE value = com.mobikok.server.bean.SspEvent.DEALTYPE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                dealType_ = rawValue;
              }
              break;
            }
            case 97: {
              bitField0_ |= 0x00000004;
              bidPrice_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00000010;
              mediaPrice_ = input.readDouble();
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              winNoticeUrl_ = bs;
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              clickUrl_ = bs;
              break;
            }
            case 138: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              pixelUrl_ = bs;
              break;
            }
            case 170: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              rawResponse_ = bs;
              break;
            }
            case 177: {
              bitField0_ |= 0x00000008;
              clearPrice_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mobikok.server.bean.SspEvent.internal_static_TradeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mobikok.server.bean.SspEvent.internal_static_TradeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mobikok.server.bean.SspEvent.TradeInfo.class, com.mobikok.server.bean.SspEvent.TradeInfo.Builder.class);
    }

    private int bitField0_;
    public static final int DEAL_TYPE_FIELD_NUMBER = 11;
    private int dealType_;
    /**
     * <pre>
     *交易类型
     * </pre>
     *
     * <code>optional .DEALTYPE deal_type = 11;</code>
     */
    public boolean hasDealType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *交易类型
     * </pre>
     *
     * <code>optional .DEALTYPE deal_type = 11;</code>
     */
    public com.mobikok.server.bean.SspEvent.DEALTYPE getDealType() {
      com.mobikok.server.bean.SspEvent.DEALTYPE result = com.mobikok.server.bean.SspEvent.DEALTYPE.valueOf(dealType_);
      return result == null ? com.mobikok.server.bean.SspEvent.DEALTYPE.CPC : result;
    }

    public static final int DSP_ID_FIELD_NUMBER = 10;
    private long dspId_;
    /**
     * <pre>
     *DSP唯一ID, winner
     * </pre>
     *
     * <code>optional int64 dsp_id = 10;</code>
     */
    public boolean hasDspId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *DSP唯一ID, winner
     * </pre>
     *
     * <code>optional int64 dsp_id = 10;</code>
     */
    public long getDspId() {
      return dspId_;
    }

    public static final int BID_PRICE_FIELD_NUMBER = 12;
    private double bidPrice_;
    /**
     * <pre>
     *竞价
     * </pre>
     *
     * <code>optional double bid_price = 12;</code>
     */
    public boolean hasBidPrice() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *竞价
     * </pre>
     *
     * <code>optional double bid_price = 12;</code>
     */
    public double getBidPrice() {
      return bidPrice_;
    }

    public static final int CLEAR_PRICE_FIELD_NUMBER = 22;
    private double clearPrice_;
    /**
     * <pre>
     *返回内容    
     * </pre>
     *
     * <code>optional double clear_price = 22;</code>
     */
    public boolean hasClearPrice() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *返回内容    
     * </pre>
     *
     * <code>optional double clear_price = 22;</code>
     */
    public double getClearPrice() {
      return clearPrice_;
    }

    public static final int MEDIA_PRICE_FIELD_NUMBER = 13;
    private double mediaPrice_;
    /**
     * <pre>
     *渠道竞价
     * </pre>
     *
     * <code>optional double media_price = 13;</code>
     */
    public boolean hasMediaPrice() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *渠道竞价
     * </pre>
     *
     * <code>optional double media_price = 13;</code>
     */
    public double getMediaPrice() {
      return mediaPrice_;
    }

    public static final int WIN_NOTICE_URL_FIELD_NUMBER = 15;
    private volatile java.lang.Object winNoticeUrl_;
    /**
     * <pre>
     *中签URL
     * </pre>
     *
     * <code>optional string win_notice_url = 15;</code>
     */
    public boolean hasWinNoticeUrl() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *中签URL
     * </pre>
     *
     * <code>optional string win_notice_url = 15;</code>
     */
    public java.lang.String getWinNoticeUrl() {
      java.lang.Object ref = winNoticeUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          winNoticeUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *中签URL
     * </pre>
     *
     * <code>optional string win_notice_url = 15;</code>
     */
    public com.google.protobuf.ByteString
        getWinNoticeUrlBytes() {
      java.lang.Object ref = winNoticeUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        winNoticeUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLICK_URL_FIELD_NUMBER = 16;
    private volatile java.lang.Object clickUrl_;
    /**
     * <pre>
     *点击URL
     * </pre>
     *
     * <code>optional string click_url = 16;</code>
     */
    public boolean hasClickUrl() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *点击URL
     * </pre>
     *
     * <code>optional string click_url = 16;</code>
     */
    public java.lang.String getClickUrl() {
      java.lang.Object ref = clickUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clickUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *点击URL
     * </pre>
     *
     * <code>optional string click_url = 16;</code>
     */
    public com.google.protobuf.ByteString
        getClickUrlBytes() {
      java.lang.Object ref = clickUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clickUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PIXEL_URL_FIELD_NUMBER = 17;
    private volatile java.lang.Object pixelUrl_;
    /**
     * <pre>
     *pixelUrl
     * </pre>
     *
     * <code>optional string pixel_url = 17;</code>
     */
    public boolean hasPixelUrl() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *pixelUrl
     * </pre>
     *
     * <code>optional string pixel_url = 17;</code>
     */
    public java.lang.String getPixelUrl() {
      java.lang.Object ref = pixelUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pixelUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *pixelUrl
     * </pre>
     *
     * <code>optional string pixel_url = 17;</code>
     */
    public com.google.protobuf.ByteString
        getPixelUrlBytes() {
      java.lang.Object ref = pixelUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pixelUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RAW_RESPONSE_FIELD_NUMBER = 21;
    private volatile java.lang.Object rawResponse_;
    /**
     * <pre>
     *返回内容
     * </pre>
     *
     * <code>optional string raw_response = 21;</code>
     */
    public boolean hasRawResponse() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *返回内容
     * </pre>
     *
     * <code>optional string raw_response = 21;</code>
     */
    public java.lang.String getRawResponse() {
      java.lang.Object ref = rawResponse_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rawResponse_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *返回内容
     * </pre>
     *
     * <code>optional string raw_response = 21;</code>
     */
    public com.google.protobuf.ByteString
        getRawResponseBytes() {
      java.lang.Object ref = rawResponse_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rawResponse_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(10, dspId_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(11, dealType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(12, bidPrice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(13, mediaPrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, winNoticeUrl_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, clickUrl_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, pixelUrl_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 21, rawResponse_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(22, clearPrice_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, dspId_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, dealType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, bidPrice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, mediaPrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, winNoticeUrl_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, clickUrl_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, pixelUrl_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, rawResponse_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(22, clearPrice_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.mobikok.server.bean.SspEvent.TradeInfo)) {
        return super.equals(obj);
      }
      com.mobikok.server.bean.SspEvent.TradeInfo other = (com.mobikok.server.bean.SspEvent.TradeInfo) obj;

      boolean result = true;
      result = result && (hasDealType() == other.hasDealType());
      if (hasDealType()) {
        result = result && dealType_ == other.dealType_;
      }
      result = result && (hasDspId() == other.hasDspId());
      if (hasDspId()) {
        result = result && (getDspId()
            == other.getDspId());
      }
      result = result && (hasBidPrice() == other.hasBidPrice());
      if (hasBidPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getBidPrice())
            == java.lang.Double.doubleToLongBits(
                other.getBidPrice()));
      }
      result = result && (hasClearPrice() == other.hasClearPrice());
      if (hasClearPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getClearPrice())
            == java.lang.Double.doubleToLongBits(
                other.getClearPrice()));
      }
      result = result && (hasMediaPrice() == other.hasMediaPrice());
      if (hasMediaPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMediaPrice())
            == java.lang.Double.doubleToLongBits(
                other.getMediaPrice()));
      }
      result = result && (hasWinNoticeUrl() == other.hasWinNoticeUrl());
      if (hasWinNoticeUrl()) {
        result = result && getWinNoticeUrl()
            .equals(other.getWinNoticeUrl());
      }
      result = result && (hasClickUrl() == other.hasClickUrl());
      if (hasClickUrl()) {
        result = result && getClickUrl()
            .equals(other.getClickUrl());
      }
      result = result && (hasPixelUrl() == other.hasPixelUrl());
      if (hasPixelUrl()) {
        result = result && getPixelUrl()
            .equals(other.getPixelUrl());
      }
      result = result && (hasRawResponse() == other.hasRawResponse());
      if (hasRawResponse()) {
        result = result && getRawResponse()
            .equals(other.getRawResponse());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasDealType()) {
        hash = (37 * hash) + DEAL_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + dealType_;
      }
      if (hasDspId()) {
        hash = (37 * hash) + DSP_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDspId());
      }
      if (hasBidPrice()) {
        hash = (37 * hash) + BID_PRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBidPrice()));
      }
      if (hasClearPrice()) {
        hash = (37 * hash) + CLEAR_PRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getClearPrice()));
      }
      if (hasMediaPrice()) {
        hash = (37 * hash) + MEDIA_PRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMediaPrice()));
      }
      if (hasWinNoticeUrl()) {
        hash = (37 * hash) + WIN_NOTICE_URL_FIELD_NUMBER;
        hash = (53 * hash) + getWinNoticeUrl().hashCode();
      }
      if (hasClickUrl()) {
        hash = (37 * hash) + CLICK_URL_FIELD_NUMBER;
        hash = (53 * hash) + getClickUrl().hashCode();
      }
      if (hasPixelUrl()) {
        hash = (37 * hash) + PIXEL_URL_FIELD_NUMBER;
        hash = (53 * hash) + getPixelUrl().hashCode();
      }
      if (hasRawResponse()) {
        hash = (37 * hash) + RAW_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getRawResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mobikok.server.bean.SspEvent.TradeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.TradeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.TradeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.TradeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.TradeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.TradeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.TradeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.TradeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.TradeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.TradeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mobikok.server.bean.SspEvent.TradeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TradeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TradeInfo)
        com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mobikok.server.bean.SspEvent.internal_static_TradeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mobikok.server.bean.SspEvent.internal_static_TradeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mobikok.server.bean.SspEvent.TradeInfo.class, com.mobikok.server.bean.SspEvent.TradeInfo.Builder.class);
      }

      // Construct using com.mobikok.server.bean.SspEvent.TradeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        dealType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        dspId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        bidPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        clearPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        mediaPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        winNoticeUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        clickUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        pixelUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        rawResponse_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mobikok.server.bean.SspEvent.internal_static_TradeInfo_descriptor;
      }

      public com.mobikok.server.bean.SspEvent.TradeInfo getDefaultInstanceForType() {
        return com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance();
      }

      public com.mobikok.server.bean.SspEvent.TradeInfo build() {
        com.mobikok.server.bean.SspEvent.TradeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mobikok.server.bean.SspEvent.TradeInfo buildPartial() {
        com.mobikok.server.bean.SspEvent.TradeInfo result = new com.mobikok.server.bean.SspEvent.TradeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dealType_ = dealType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dspId_ = dspId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bidPrice_ = bidPrice_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clearPrice_ = clearPrice_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mediaPrice_ = mediaPrice_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.winNoticeUrl_ = winNoticeUrl_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clickUrl_ = clickUrl_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.pixelUrl_ = pixelUrl_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.rawResponse_ = rawResponse_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mobikok.server.bean.SspEvent.TradeInfo) {
          return mergeFrom((com.mobikok.server.bean.SspEvent.TradeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mobikok.server.bean.SspEvent.TradeInfo other) {
        if (other == com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance()) return this;
        if (other.hasDealType()) {
          setDealType(other.getDealType());
        }
        if (other.hasDspId()) {
          setDspId(other.getDspId());
        }
        if (other.hasBidPrice()) {
          setBidPrice(other.getBidPrice());
        }
        if (other.hasClearPrice()) {
          setClearPrice(other.getClearPrice());
        }
        if (other.hasMediaPrice()) {
          setMediaPrice(other.getMediaPrice());
        }
        if (other.hasWinNoticeUrl()) {
          bitField0_ |= 0x00000020;
          winNoticeUrl_ = other.winNoticeUrl_;
          onChanged();
        }
        if (other.hasClickUrl()) {
          bitField0_ |= 0x00000040;
          clickUrl_ = other.clickUrl_;
          onChanged();
        }
        if (other.hasPixelUrl()) {
          bitField0_ |= 0x00000080;
          pixelUrl_ = other.pixelUrl_;
          onChanged();
        }
        if (other.hasRawResponse()) {
          bitField0_ |= 0x00000100;
          rawResponse_ = other.rawResponse_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mobikok.server.bean.SspEvent.TradeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mobikok.server.bean.SspEvent.TradeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int dealType_ = 1;
      /**
       * <pre>
       *交易类型
       * </pre>
       *
       * <code>optional .DEALTYPE deal_type = 11;</code>
       */
      public boolean hasDealType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *交易类型
       * </pre>
       *
       * <code>optional .DEALTYPE deal_type = 11;</code>
       */
      public com.mobikok.server.bean.SspEvent.DEALTYPE getDealType() {
        com.mobikok.server.bean.SspEvent.DEALTYPE result = com.mobikok.server.bean.SspEvent.DEALTYPE.valueOf(dealType_);
        return result == null ? com.mobikok.server.bean.SspEvent.DEALTYPE.CPC : result;
      }
      /**
       * <pre>
       *交易类型
       * </pre>
       *
       * <code>optional .DEALTYPE deal_type = 11;</code>
       */
      public Builder setDealType(com.mobikok.server.bean.SspEvent.DEALTYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        dealType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *交易类型
       * </pre>
       *
       * <code>optional .DEALTYPE deal_type = 11;</code>
       */
      public Builder clearDealType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dealType_ = 1;
        onChanged();
        return this;
      }

      private long dspId_ ;
      /**
       * <pre>
       *DSP唯一ID, winner
       * </pre>
       *
       * <code>optional int64 dsp_id = 10;</code>
       */
      public boolean hasDspId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *DSP唯一ID, winner
       * </pre>
       *
       * <code>optional int64 dsp_id = 10;</code>
       */
      public long getDspId() {
        return dspId_;
      }
      /**
       * <pre>
       *DSP唯一ID, winner
       * </pre>
       *
       * <code>optional int64 dsp_id = 10;</code>
       */
      public Builder setDspId(long value) {
        bitField0_ |= 0x00000002;
        dspId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *DSP唯一ID, winner
       * </pre>
       *
       * <code>optional int64 dsp_id = 10;</code>
       */
      public Builder clearDspId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dspId_ = 0L;
        onChanged();
        return this;
      }

      private double bidPrice_ ;
      /**
       * <pre>
       *竞价
       * </pre>
       *
       * <code>optional double bid_price = 12;</code>
       */
      public boolean hasBidPrice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *竞价
       * </pre>
       *
       * <code>optional double bid_price = 12;</code>
       */
      public double getBidPrice() {
        return bidPrice_;
      }
      /**
       * <pre>
       *竞价
       * </pre>
       *
       * <code>optional double bid_price = 12;</code>
       */
      public Builder setBidPrice(double value) {
        bitField0_ |= 0x00000004;
        bidPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *竞价
       * </pre>
       *
       * <code>optional double bid_price = 12;</code>
       */
      public Builder clearBidPrice() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bidPrice_ = 0D;
        onChanged();
        return this;
      }

      private double clearPrice_ ;
      /**
       * <pre>
       *返回内容    
       * </pre>
       *
       * <code>optional double clear_price = 22;</code>
       */
      public boolean hasClearPrice() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *返回内容    
       * </pre>
       *
       * <code>optional double clear_price = 22;</code>
       */
      public double getClearPrice() {
        return clearPrice_;
      }
      /**
       * <pre>
       *返回内容    
       * </pre>
       *
       * <code>optional double clear_price = 22;</code>
       */
      public Builder setClearPrice(double value) {
        bitField0_ |= 0x00000008;
        clearPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返回内容    
       * </pre>
       *
       * <code>optional double clear_price = 22;</code>
       */
      public Builder clearClearPrice() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clearPrice_ = 0D;
        onChanged();
        return this;
      }

      private double mediaPrice_ ;
      /**
       * <pre>
       *渠道竞价
       * </pre>
       *
       * <code>optional double media_price = 13;</code>
       */
      public boolean hasMediaPrice() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *渠道竞价
       * </pre>
       *
       * <code>optional double media_price = 13;</code>
       */
      public double getMediaPrice() {
        return mediaPrice_;
      }
      /**
       * <pre>
       *渠道竞价
       * </pre>
       *
       * <code>optional double media_price = 13;</code>
       */
      public Builder setMediaPrice(double value) {
        bitField0_ |= 0x00000010;
        mediaPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *渠道竞价
       * </pre>
       *
       * <code>optional double media_price = 13;</code>
       */
      public Builder clearMediaPrice() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mediaPrice_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object winNoticeUrl_ = "";
      /**
       * <pre>
       *中签URL
       * </pre>
       *
       * <code>optional string win_notice_url = 15;</code>
       */
      public boolean hasWinNoticeUrl() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *中签URL
       * </pre>
       *
       * <code>optional string win_notice_url = 15;</code>
       */
      public java.lang.String getWinNoticeUrl() {
        java.lang.Object ref = winNoticeUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            winNoticeUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *中签URL
       * </pre>
       *
       * <code>optional string win_notice_url = 15;</code>
       */
      public com.google.protobuf.ByteString
          getWinNoticeUrlBytes() {
        java.lang.Object ref = winNoticeUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          winNoticeUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *中签URL
       * </pre>
       *
       * <code>optional string win_notice_url = 15;</code>
       */
      public Builder setWinNoticeUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        winNoticeUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中签URL
       * </pre>
       *
       * <code>optional string win_notice_url = 15;</code>
       */
      public Builder clearWinNoticeUrl() {
        bitField0_ = (bitField0_ & ~0x00000020);
        winNoticeUrl_ = getDefaultInstance().getWinNoticeUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中签URL
       * </pre>
       *
       * <code>optional string win_notice_url = 15;</code>
       */
      public Builder setWinNoticeUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        winNoticeUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clickUrl_ = "";
      /**
       * <pre>
       *点击URL
       * </pre>
       *
       * <code>optional string click_url = 16;</code>
       */
      public boolean hasClickUrl() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *点击URL
       * </pre>
       *
       * <code>optional string click_url = 16;</code>
       */
      public java.lang.String getClickUrl() {
        java.lang.Object ref = clickUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clickUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *点击URL
       * </pre>
       *
       * <code>optional string click_url = 16;</code>
       */
      public com.google.protobuf.ByteString
          getClickUrlBytes() {
        java.lang.Object ref = clickUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clickUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *点击URL
       * </pre>
       *
       * <code>optional string click_url = 16;</code>
       */
      public Builder setClickUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        clickUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *点击URL
       * </pre>
       *
       * <code>optional string click_url = 16;</code>
       */
      public Builder clearClickUrl() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clickUrl_ = getDefaultInstance().getClickUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *点击URL
       * </pre>
       *
       * <code>optional string click_url = 16;</code>
       */
      public Builder setClickUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        clickUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pixelUrl_ = "";
      /**
       * <pre>
       *pixelUrl
       * </pre>
       *
       * <code>optional string pixel_url = 17;</code>
       */
      public boolean hasPixelUrl() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *pixelUrl
       * </pre>
       *
       * <code>optional string pixel_url = 17;</code>
       */
      public java.lang.String getPixelUrl() {
        java.lang.Object ref = pixelUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pixelUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *pixelUrl
       * </pre>
       *
       * <code>optional string pixel_url = 17;</code>
       */
      public com.google.protobuf.ByteString
          getPixelUrlBytes() {
        java.lang.Object ref = pixelUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pixelUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *pixelUrl
       * </pre>
       *
       * <code>optional string pixel_url = 17;</code>
       */
      public Builder setPixelUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        pixelUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *pixelUrl
       * </pre>
       *
       * <code>optional string pixel_url = 17;</code>
       */
      public Builder clearPixelUrl() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pixelUrl_ = getDefaultInstance().getPixelUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *pixelUrl
       * </pre>
       *
       * <code>optional string pixel_url = 17;</code>
       */
      public Builder setPixelUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        pixelUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object rawResponse_ = "";
      /**
       * <pre>
       *返回内容
       * </pre>
       *
       * <code>optional string raw_response = 21;</code>
       */
      public boolean hasRawResponse() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *返回内容
       * </pre>
       *
       * <code>optional string raw_response = 21;</code>
       */
      public java.lang.String getRawResponse() {
        java.lang.Object ref = rawResponse_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            rawResponse_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *返回内容
       * </pre>
       *
       * <code>optional string raw_response = 21;</code>
       */
      public com.google.protobuf.ByteString
          getRawResponseBytes() {
        java.lang.Object ref = rawResponse_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rawResponse_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *返回内容
       * </pre>
       *
       * <code>optional string raw_response = 21;</code>
       */
      public Builder setRawResponse(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        rawResponse_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返回内容
       * </pre>
       *
       * <code>optional string raw_response = 21;</code>
       */
      public Builder clearRawResponse() {
        bitField0_ = (bitField0_ & ~0x00000100);
        rawResponse_ = getDefaultInstance().getRawResponse();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返回内容
       * </pre>
       *
       * <code>optional string raw_response = 21;</code>
       */
      public Builder setRawResponseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        rawResponse_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TradeInfo)
    }

    // @@protoc_insertion_point(class_scope:TradeInfo)
    private static final com.mobikok.server.bean.SspEvent.TradeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mobikok.server.bean.SspEvent.TradeInfo();
    }

    public static com.mobikok.server.bean.SspEvent.TradeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TradeInfo>
        PARSER = new com.google.protobuf.AbstractParser<TradeInfo>() {
      public TradeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TradeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TradeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TradeInfo> getParserForType() {
      return PARSER;
    }

    public com.mobikok.server.bean.SspEvent.TradeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    boolean hasClickId();
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    java.lang.String getClickId();
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getClickIdBytes();

    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    boolean hasRequest();
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestInfo getRequest();
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder();

    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    boolean hasTrade();
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.TradeInfo getTrade();
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder();
  }
  /**
   * Protobuf type {@code Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Request)
      RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
      clickId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              clickId_ = bs;
              break;
            }
            case 26: {
              com.mobikok.server.bean.SspEvent.RequestInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(com.mobikok.server.bean.SspEvent.RequestInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              com.mobikok.server.bean.SspEvent.TradeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = trade_.toBuilder();
              }
              trade_ = input.readMessage(com.mobikok.server.bean.SspEvent.TradeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trade_);
                trade_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mobikok.server.bean.SspEvent.internal_static_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mobikok.server.bean.SspEvent.internal_static_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mobikok.server.bean.SspEvent.Request.class, com.mobikok.server.bean.SspEvent.Request.Builder.class);
    }

    private int bitField0_;
    public static final int CLICK_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object clickId_;
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public boolean hasClickId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public java.lang.String getClickId() {
      java.lang.Object ref = clickId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clickId_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getClickIdBytes() {
      java.lang.Object ref = clickId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clickId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REQUEST_FIELD_NUMBER = 3;
    private com.mobikok.server.bean.SspEvent.RequestInfo request_;
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestInfo getRequest() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
    }
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
    }

    public static final int TRADE_FIELD_NUMBER = 4;
    private com.mobikok.server.bean.SspEvent.TradeInfo trade_;
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public boolean hasTrade() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.TradeInfo getTrade() {
      return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
    }
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder() {
      return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasClickId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRequest()) {
        if (!getRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clickId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, getTrade());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clickId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTrade());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.mobikok.server.bean.SspEvent.Request)) {
        return super.equals(obj);
      }
      com.mobikok.server.bean.SspEvent.Request other = (com.mobikok.server.bean.SspEvent.Request) obj;

      boolean result = true;
      result = result && (hasClickId() == other.hasClickId());
      if (hasClickId()) {
        result = result && getClickId()
            .equals(other.getClickId());
      }
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      result = result && (hasTrade() == other.hasTrade());
      if (hasTrade()) {
        result = result && getTrade()
            .equals(other.getTrade());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasClickId()) {
        hash = (37 * hash) + CLICK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getClickId().hashCode();
      }
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (hasTrade()) {
        hash = (37 * hash) + TRADE_FIELD_NUMBER;
        hash = (53 * hash) + getTrade().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mobikok.server.bean.SspEvent.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mobikok.server.bean.SspEvent.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Request)
        com.mobikok.server.bean.SspEvent.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mobikok.server.bean.SspEvent.internal_static_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mobikok.server.bean.SspEvent.internal_static_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mobikok.server.bean.SspEvent.Request.class, com.mobikok.server.bean.SspEvent.Request.Builder.class);
      }

      // Construct using com.mobikok.server.bean.SspEvent.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRequestFieldBuilder();
          getTradeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        clickId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tradeBuilder_ == null) {
          trade_ = null;
        } else {
          tradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mobikok.server.bean.SspEvent.internal_static_Request_descriptor;
      }

      public com.mobikok.server.bean.SspEvent.Request getDefaultInstanceForType() {
        return com.mobikok.server.bean.SspEvent.Request.getDefaultInstance();
      }

      public com.mobikok.server.bean.SspEvent.Request build() {
        com.mobikok.server.bean.SspEvent.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mobikok.server.bean.SspEvent.Request buildPartial() {
        com.mobikok.server.bean.SspEvent.Request result = new com.mobikok.server.bean.SspEvent.Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clickId_ = clickId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tradeBuilder_ == null) {
          result.trade_ = trade_;
        } else {
          result.trade_ = tradeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mobikok.server.bean.SspEvent.Request) {
          return mergeFrom((com.mobikok.server.bean.SspEvent.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mobikok.server.bean.SspEvent.Request other) {
        if (other == com.mobikok.server.bean.SspEvent.Request.getDefaultInstance()) return this;
        if (other.hasClickId()) {
          bitField0_ |= 0x00000001;
          clickId_ = other.clickId_;
          onChanged();
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasTrade()) {
          mergeTrade(other.getTrade());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClickId()) {
          return false;
        }
        if (hasRequest()) {
          if (!getRequest().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mobikok.server.bean.SspEvent.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mobikok.server.bean.SspEvent.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object clickId_ = "";
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public boolean hasClickId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public java.lang.String getClickId() {
        java.lang.Object ref = clickId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clickId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClickIdBytes() {
        java.lang.Object ref = clickId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clickId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder setClickId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder clearClickId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clickId_ = getDefaultInstance().getClickId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder setClickIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }

      private com.mobikok.server.bean.SspEvent.RequestInfo request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder> requestBuilder_;
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfo getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder setRequest(com.mobikok.server.bean.SspEvent.RequestInfo value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder setRequest(
          com.mobikok.server.bean.SspEvent.RequestInfo.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder mergeRequest(com.mobikok.server.bean.SspEvent.RequestInfo value) {
        if (requestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              request_ != null &&
              request_ != com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance()) {
            request_ =
              com.mobikok.server.bean.SspEvent.RequestInfo.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfo.Builder getRequestBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
        }
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      private com.mobikok.server.bean.SspEvent.TradeInfo trade_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder> tradeBuilder_;
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public boolean hasTrade() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfo getTrade() {
        if (tradeBuilder_ == null) {
          return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
        } else {
          return tradeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder setTrade(com.mobikok.server.bean.SspEvent.TradeInfo value) {
        if (tradeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trade_ = value;
          onChanged();
        } else {
          tradeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder setTrade(
          com.mobikok.server.bean.SspEvent.TradeInfo.Builder builderForValue) {
        if (tradeBuilder_ == null) {
          trade_ = builderForValue.build();
          onChanged();
        } else {
          tradeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder mergeTrade(com.mobikok.server.bean.SspEvent.TradeInfo value) {
        if (tradeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              trade_ != null &&
              trade_ != com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance()) {
            trade_ =
              com.mobikok.server.bean.SspEvent.TradeInfo.newBuilder(trade_).mergeFrom(value).buildPartial();
          } else {
            trade_ = value;
          }
          onChanged();
        } else {
          tradeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder clearTrade() {
        if (tradeBuilder_ == null) {
          trade_ = null;
          onChanged();
        } else {
          tradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfo.Builder getTradeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTradeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder() {
        if (tradeBuilder_ != null) {
          return tradeBuilder_.getMessageOrBuilder();
        } else {
          return trade_ == null ?
              com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
        }
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder> 
          getTradeFieldBuilder() {
        if (tradeBuilder_ == null) {
          tradeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder>(
                  getTrade(),
                  getParentForChildren(),
                  isClean());
          trade_ = null;
        }
        return tradeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Request)
    }

    // @@protoc_insertion_point(class_scope:Request)
    private static final com.mobikok.server.bean.SspEvent.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mobikok.server.bean.SspEvent.Request();
    }

    public static com.mobikok.server.bean.SspEvent.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public com.mobikok.server.bean.SspEvent.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SendOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Send)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    boolean hasClickId();
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    java.lang.String getClickId();
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getClickIdBytes();

    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    boolean hasRequest();
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestInfo getRequest();
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder();

    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    boolean hasTrade();
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.TradeInfo getTrade();
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder();
  }
  /**
   * Protobuf type {@code Send}
   */
  public  static final class Send extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Send)
      SendOrBuilder {
    // Use Send.newBuilder() to construct.
    private Send(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Send() {
      clickId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Send(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              clickId_ = bs;
              break;
            }
            case 26: {
              com.mobikok.server.bean.SspEvent.RequestInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(com.mobikok.server.bean.SspEvent.RequestInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              com.mobikok.server.bean.SspEvent.TradeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = trade_.toBuilder();
              }
              trade_ = input.readMessage(com.mobikok.server.bean.SspEvent.TradeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trade_);
                trade_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mobikok.server.bean.SspEvent.internal_static_Send_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mobikok.server.bean.SspEvent.internal_static_Send_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mobikok.server.bean.SspEvent.Send.class, com.mobikok.server.bean.SspEvent.Send.Builder.class);
    }

    private int bitField0_;
    public static final int CLICK_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object clickId_;
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public boolean hasClickId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public java.lang.String getClickId() {
      java.lang.Object ref = clickId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clickId_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getClickIdBytes() {
      java.lang.Object ref = clickId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clickId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REQUEST_FIELD_NUMBER = 3;
    private com.mobikok.server.bean.SspEvent.RequestInfo request_;
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestInfo getRequest() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
    }
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
    }

    public static final int TRADE_FIELD_NUMBER = 4;
    private com.mobikok.server.bean.SspEvent.TradeInfo trade_;
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public boolean hasTrade() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.TradeInfo getTrade() {
      return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
    }
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder() {
      return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasClickId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRequest()) {
        if (!getRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clickId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, getTrade());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clickId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTrade());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.mobikok.server.bean.SspEvent.Send)) {
        return super.equals(obj);
      }
      com.mobikok.server.bean.SspEvent.Send other = (com.mobikok.server.bean.SspEvent.Send) obj;

      boolean result = true;
      result = result && (hasClickId() == other.hasClickId());
      if (hasClickId()) {
        result = result && getClickId()
            .equals(other.getClickId());
      }
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      result = result && (hasTrade() == other.hasTrade());
      if (hasTrade()) {
        result = result && getTrade()
            .equals(other.getTrade());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasClickId()) {
        hash = (37 * hash) + CLICK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getClickId().hashCode();
      }
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (hasTrade()) {
        hash = (37 * hash) + TRADE_FIELD_NUMBER;
        hash = (53 * hash) + getTrade().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mobikok.server.bean.SspEvent.Send parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.Send parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Send parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.Send parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Send parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Send parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Send parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Send parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Send parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Send parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mobikok.server.bean.SspEvent.Send prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Send}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Send)
        com.mobikok.server.bean.SspEvent.SendOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mobikok.server.bean.SspEvent.internal_static_Send_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mobikok.server.bean.SspEvent.internal_static_Send_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mobikok.server.bean.SspEvent.Send.class, com.mobikok.server.bean.SspEvent.Send.Builder.class);
      }

      // Construct using com.mobikok.server.bean.SspEvent.Send.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRequestFieldBuilder();
          getTradeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        clickId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tradeBuilder_ == null) {
          trade_ = null;
        } else {
          tradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mobikok.server.bean.SspEvent.internal_static_Send_descriptor;
      }

      public com.mobikok.server.bean.SspEvent.Send getDefaultInstanceForType() {
        return com.mobikok.server.bean.SspEvent.Send.getDefaultInstance();
      }

      public com.mobikok.server.bean.SspEvent.Send build() {
        com.mobikok.server.bean.SspEvent.Send result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mobikok.server.bean.SspEvent.Send buildPartial() {
        com.mobikok.server.bean.SspEvent.Send result = new com.mobikok.server.bean.SspEvent.Send(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clickId_ = clickId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tradeBuilder_ == null) {
          result.trade_ = trade_;
        } else {
          result.trade_ = tradeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mobikok.server.bean.SspEvent.Send) {
          return mergeFrom((com.mobikok.server.bean.SspEvent.Send)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mobikok.server.bean.SspEvent.Send other) {
        if (other == com.mobikok.server.bean.SspEvent.Send.getDefaultInstance()) return this;
        if (other.hasClickId()) {
          bitField0_ |= 0x00000001;
          clickId_ = other.clickId_;
          onChanged();
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasTrade()) {
          mergeTrade(other.getTrade());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClickId()) {
          return false;
        }
        if (hasRequest()) {
          if (!getRequest().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mobikok.server.bean.SspEvent.Send parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mobikok.server.bean.SspEvent.Send) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object clickId_ = "";
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public boolean hasClickId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public java.lang.String getClickId() {
        java.lang.Object ref = clickId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clickId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClickIdBytes() {
        java.lang.Object ref = clickId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clickId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder setClickId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder clearClickId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clickId_ = getDefaultInstance().getClickId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder setClickIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }

      private com.mobikok.server.bean.SspEvent.RequestInfo request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder> requestBuilder_;
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfo getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder setRequest(com.mobikok.server.bean.SspEvent.RequestInfo value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder setRequest(
          com.mobikok.server.bean.SspEvent.RequestInfo.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder mergeRequest(com.mobikok.server.bean.SspEvent.RequestInfo value) {
        if (requestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              request_ != null &&
              request_ != com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance()) {
            request_ =
              com.mobikok.server.bean.SspEvent.RequestInfo.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfo.Builder getRequestBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
        }
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      private com.mobikok.server.bean.SspEvent.TradeInfo trade_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder> tradeBuilder_;
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public boolean hasTrade() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfo getTrade() {
        if (tradeBuilder_ == null) {
          return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
        } else {
          return tradeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder setTrade(com.mobikok.server.bean.SspEvent.TradeInfo value) {
        if (tradeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trade_ = value;
          onChanged();
        } else {
          tradeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder setTrade(
          com.mobikok.server.bean.SspEvent.TradeInfo.Builder builderForValue) {
        if (tradeBuilder_ == null) {
          trade_ = builderForValue.build();
          onChanged();
        } else {
          tradeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder mergeTrade(com.mobikok.server.bean.SspEvent.TradeInfo value) {
        if (tradeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              trade_ != null &&
              trade_ != com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance()) {
            trade_ =
              com.mobikok.server.bean.SspEvent.TradeInfo.newBuilder(trade_).mergeFrom(value).buildPartial();
          } else {
            trade_ = value;
          }
          onChanged();
        } else {
          tradeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder clearTrade() {
        if (tradeBuilder_ == null) {
          trade_ = null;
          onChanged();
        } else {
          tradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfo.Builder getTradeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTradeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder() {
        if (tradeBuilder_ != null) {
          return tradeBuilder_.getMessageOrBuilder();
        } else {
          return trade_ == null ?
              com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
        }
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder> 
          getTradeFieldBuilder() {
        if (tradeBuilder_ == null) {
          tradeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder>(
                  getTrade(),
                  getParentForChildren(),
                  isClean());
          trade_ = null;
        }
        return tradeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Send)
    }

    // @@protoc_insertion_point(class_scope:Send)
    private static final com.mobikok.server.bean.SspEvent.Send DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mobikok.server.bean.SspEvent.Send();
    }

    public static com.mobikok.server.bean.SspEvent.Send getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Send>
        PARSER = new com.google.protobuf.AbstractParser<Send>() {
      public Send parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Send(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Send> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Send> getParserForType() {
      return PARSER;
    }

    public com.mobikok.server.bean.SspEvent.Send getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WinNoticeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:WinNotice)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    boolean hasClickId();
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    java.lang.String getClickId();
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getClickIdBytes();

    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    boolean hasRequest();
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestInfo getRequest();
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder();

    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    boolean hasTrade();
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.TradeInfo getTrade();
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder();
  }
  /**
   * Protobuf type {@code WinNotice}
   */
  public  static final class WinNotice extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:WinNotice)
      WinNoticeOrBuilder {
    // Use WinNotice.newBuilder() to construct.
    private WinNotice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WinNotice() {
      clickId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WinNotice(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              clickId_ = bs;
              break;
            }
            case 26: {
              com.mobikok.server.bean.SspEvent.RequestInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(com.mobikok.server.bean.SspEvent.RequestInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              com.mobikok.server.bean.SspEvent.TradeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = trade_.toBuilder();
              }
              trade_ = input.readMessage(com.mobikok.server.bean.SspEvent.TradeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trade_);
                trade_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mobikok.server.bean.SspEvent.internal_static_WinNotice_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mobikok.server.bean.SspEvent.internal_static_WinNotice_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mobikok.server.bean.SspEvent.WinNotice.class, com.mobikok.server.bean.SspEvent.WinNotice.Builder.class);
    }

    private int bitField0_;
    public static final int CLICK_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object clickId_;
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public boolean hasClickId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public java.lang.String getClickId() {
      java.lang.Object ref = clickId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clickId_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getClickIdBytes() {
      java.lang.Object ref = clickId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clickId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REQUEST_FIELD_NUMBER = 3;
    private com.mobikok.server.bean.SspEvent.RequestInfo request_;
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestInfo getRequest() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
    }
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
    }

    public static final int TRADE_FIELD_NUMBER = 4;
    private com.mobikok.server.bean.SspEvent.TradeInfo trade_;
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public boolean hasTrade() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.TradeInfo getTrade() {
      return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
    }
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder() {
      return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasClickId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRequest()) {
        if (!getRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clickId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, getTrade());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clickId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTrade());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.mobikok.server.bean.SspEvent.WinNotice)) {
        return super.equals(obj);
      }
      com.mobikok.server.bean.SspEvent.WinNotice other = (com.mobikok.server.bean.SspEvent.WinNotice) obj;

      boolean result = true;
      result = result && (hasClickId() == other.hasClickId());
      if (hasClickId()) {
        result = result && getClickId()
            .equals(other.getClickId());
      }
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      result = result && (hasTrade() == other.hasTrade());
      if (hasTrade()) {
        result = result && getTrade()
            .equals(other.getTrade());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasClickId()) {
        hash = (37 * hash) + CLICK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getClickId().hashCode();
      }
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (hasTrade()) {
        hash = (37 * hash) + TRADE_FIELD_NUMBER;
        hash = (53 * hash) + getTrade().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mobikok.server.bean.SspEvent.WinNotice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.WinNotice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.WinNotice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.WinNotice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.WinNotice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.WinNotice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.WinNotice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.WinNotice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.WinNotice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.WinNotice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mobikok.server.bean.SspEvent.WinNotice prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WinNotice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:WinNotice)
        com.mobikok.server.bean.SspEvent.WinNoticeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mobikok.server.bean.SspEvent.internal_static_WinNotice_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mobikok.server.bean.SspEvent.internal_static_WinNotice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mobikok.server.bean.SspEvent.WinNotice.class, com.mobikok.server.bean.SspEvent.WinNotice.Builder.class);
      }

      // Construct using com.mobikok.server.bean.SspEvent.WinNotice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRequestFieldBuilder();
          getTradeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        clickId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tradeBuilder_ == null) {
          trade_ = null;
        } else {
          tradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mobikok.server.bean.SspEvent.internal_static_WinNotice_descriptor;
      }

      public com.mobikok.server.bean.SspEvent.WinNotice getDefaultInstanceForType() {
        return com.mobikok.server.bean.SspEvent.WinNotice.getDefaultInstance();
      }

      public com.mobikok.server.bean.SspEvent.WinNotice build() {
        com.mobikok.server.bean.SspEvent.WinNotice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mobikok.server.bean.SspEvent.WinNotice buildPartial() {
        com.mobikok.server.bean.SspEvent.WinNotice result = new com.mobikok.server.bean.SspEvent.WinNotice(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clickId_ = clickId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tradeBuilder_ == null) {
          result.trade_ = trade_;
        } else {
          result.trade_ = tradeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mobikok.server.bean.SspEvent.WinNotice) {
          return mergeFrom((com.mobikok.server.bean.SspEvent.WinNotice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mobikok.server.bean.SspEvent.WinNotice other) {
        if (other == com.mobikok.server.bean.SspEvent.WinNotice.getDefaultInstance()) return this;
        if (other.hasClickId()) {
          bitField0_ |= 0x00000001;
          clickId_ = other.clickId_;
          onChanged();
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasTrade()) {
          mergeTrade(other.getTrade());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClickId()) {
          return false;
        }
        if (hasRequest()) {
          if (!getRequest().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mobikok.server.bean.SspEvent.WinNotice parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mobikok.server.bean.SspEvent.WinNotice) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object clickId_ = "";
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public boolean hasClickId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public java.lang.String getClickId() {
        java.lang.Object ref = clickId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clickId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClickIdBytes() {
        java.lang.Object ref = clickId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clickId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder setClickId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder clearClickId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clickId_ = getDefaultInstance().getClickId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder setClickIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }

      private com.mobikok.server.bean.SspEvent.RequestInfo request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder> requestBuilder_;
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfo getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder setRequest(com.mobikok.server.bean.SspEvent.RequestInfo value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder setRequest(
          com.mobikok.server.bean.SspEvent.RequestInfo.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder mergeRequest(com.mobikok.server.bean.SspEvent.RequestInfo value) {
        if (requestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              request_ != null &&
              request_ != com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance()) {
            request_ =
              com.mobikok.server.bean.SspEvent.RequestInfo.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfo.Builder getRequestBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
        }
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      private com.mobikok.server.bean.SspEvent.TradeInfo trade_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder> tradeBuilder_;
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public boolean hasTrade() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfo getTrade() {
        if (tradeBuilder_ == null) {
          return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
        } else {
          return tradeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder setTrade(com.mobikok.server.bean.SspEvent.TradeInfo value) {
        if (tradeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trade_ = value;
          onChanged();
        } else {
          tradeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder setTrade(
          com.mobikok.server.bean.SspEvent.TradeInfo.Builder builderForValue) {
        if (tradeBuilder_ == null) {
          trade_ = builderForValue.build();
          onChanged();
        } else {
          tradeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder mergeTrade(com.mobikok.server.bean.SspEvent.TradeInfo value) {
        if (tradeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              trade_ != null &&
              trade_ != com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance()) {
            trade_ =
              com.mobikok.server.bean.SspEvent.TradeInfo.newBuilder(trade_).mergeFrom(value).buildPartial();
          } else {
            trade_ = value;
          }
          onChanged();
        } else {
          tradeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder clearTrade() {
        if (tradeBuilder_ == null) {
          trade_ = null;
          onChanged();
        } else {
          tradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfo.Builder getTradeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTradeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder() {
        if (tradeBuilder_ != null) {
          return tradeBuilder_.getMessageOrBuilder();
        } else {
          return trade_ == null ?
              com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
        }
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder> 
          getTradeFieldBuilder() {
        if (tradeBuilder_ == null) {
          tradeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder>(
                  getTrade(),
                  getParentForChildren(),
                  isClean());
          trade_ = null;
        }
        return tradeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:WinNotice)
    }

    // @@protoc_insertion_point(class_scope:WinNotice)
    private static final com.mobikok.server.bean.SspEvent.WinNotice DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mobikok.server.bean.SspEvent.WinNotice();
    }

    public static com.mobikok.server.bean.SspEvent.WinNotice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WinNotice>
        PARSER = new com.google.protobuf.AbstractParser<WinNotice>() {
      public WinNotice parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new WinNotice(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WinNotice> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WinNotice> getParserForType() {
      return PARSER;
    }

    public com.mobikok.server.bean.SspEvent.WinNotice getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImpressionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Impression)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    boolean hasClickId();
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    java.lang.String getClickId();
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getClickIdBytes();

    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    boolean hasRequest();
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestInfo getRequest();
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder();

    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    boolean hasTrade();
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.TradeInfo getTrade();
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder();
  }
  /**
   * Protobuf type {@code Impression}
   */
  public  static final class Impression extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Impression)
      ImpressionOrBuilder {
    // Use Impression.newBuilder() to construct.
    private Impression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Impression() {
      clickId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Impression(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              clickId_ = bs;
              break;
            }
            case 26: {
              com.mobikok.server.bean.SspEvent.RequestInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(com.mobikok.server.bean.SspEvent.RequestInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              com.mobikok.server.bean.SspEvent.TradeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = trade_.toBuilder();
              }
              trade_ = input.readMessage(com.mobikok.server.bean.SspEvent.TradeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trade_);
                trade_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mobikok.server.bean.SspEvent.internal_static_Impression_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mobikok.server.bean.SspEvent.internal_static_Impression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mobikok.server.bean.SspEvent.Impression.class, com.mobikok.server.bean.SspEvent.Impression.Builder.class);
    }

    private int bitField0_;
    public static final int CLICK_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object clickId_;
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public boolean hasClickId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public java.lang.String getClickId() {
      java.lang.Object ref = clickId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clickId_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getClickIdBytes() {
      java.lang.Object ref = clickId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clickId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REQUEST_FIELD_NUMBER = 3;
    private com.mobikok.server.bean.SspEvent.RequestInfo request_;
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestInfo getRequest() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
    }
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
    }

    public static final int TRADE_FIELD_NUMBER = 4;
    private com.mobikok.server.bean.SspEvent.TradeInfo trade_;
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public boolean hasTrade() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.TradeInfo getTrade() {
      return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
    }
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder() {
      return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasClickId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRequest()) {
        if (!getRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clickId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, getTrade());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clickId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTrade());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.mobikok.server.bean.SspEvent.Impression)) {
        return super.equals(obj);
      }
      com.mobikok.server.bean.SspEvent.Impression other = (com.mobikok.server.bean.SspEvent.Impression) obj;

      boolean result = true;
      result = result && (hasClickId() == other.hasClickId());
      if (hasClickId()) {
        result = result && getClickId()
            .equals(other.getClickId());
      }
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      result = result && (hasTrade() == other.hasTrade());
      if (hasTrade()) {
        result = result && getTrade()
            .equals(other.getTrade());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasClickId()) {
        hash = (37 * hash) + CLICK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getClickId().hashCode();
      }
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (hasTrade()) {
        hash = (37 * hash) + TRADE_FIELD_NUMBER;
        hash = (53 * hash) + getTrade().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mobikok.server.bean.SspEvent.Impression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.Impression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Impression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.Impression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Impression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Impression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Impression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Impression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Impression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Impression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mobikok.server.bean.SspEvent.Impression prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Impression}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Impression)
        com.mobikok.server.bean.SspEvent.ImpressionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mobikok.server.bean.SspEvent.internal_static_Impression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mobikok.server.bean.SspEvent.internal_static_Impression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mobikok.server.bean.SspEvent.Impression.class, com.mobikok.server.bean.SspEvent.Impression.Builder.class);
      }

      // Construct using com.mobikok.server.bean.SspEvent.Impression.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRequestFieldBuilder();
          getTradeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        clickId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tradeBuilder_ == null) {
          trade_ = null;
        } else {
          tradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mobikok.server.bean.SspEvent.internal_static_Impression_descriptor;
      }

      public com.mobikok.server.bean.SspEvent.Impression getDefaultInstanceForType() {
        return com.mobikok.server.bean.SspEvent.Impression.getDefaultInstance();
      }

      public com.mobikok.server.bean.SspEvent.Impression build() {
        com.mobikok.server.bean.SspEvent.Impression result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mobikok.server.bean.SspEvent.Impression buildPartial() {
        com.mobikok.server.bean.SspEvent.Impression result = new com.mobikok.server.bean.SspEvent.Impression(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clickId_ = clickId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tradeBuilder_ == null) {
          result.trade_ = trade_;
        } else {
          result.trade_ = tradeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mobikok.server.bean.SspEvent.Impression) {
          return mergeFrom((com.mobikok.server.bean.SspEvent.Impression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mobikok.server.bean.SspEvent.Impression other) {
        if (other == com.mobikok.server.bean.SspEvent.Impression.getDefaultInstance()) return this;
        if (other.hasClickId()) {
          bitField0_ |= 0x00000001;
          clickId_ = other.clickId_;
          onChanged();
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasTrade()) {
          mergeTrade(other.getTrade());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClickId()) {
          return false;
        }
        if (hasRequest()) {
          if (!getRequest().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mobikok.server.bean.SspEvent.Impression parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mobikok.server.bean.SspEvent.Impression) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object clickId_ = "";
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public boolean hasClickId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public java.lang.String getClickId() {
        java.lang.Object ref = clickId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clickId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClickIdBytes() {
        java.lang.Object ref = clickId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clickId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder setClickId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder clearClickId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clickId_ = getDefaultInstance().getClickId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder setClickIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }

      private com.mobikok.server.bean.SspEvent.RequestInfo request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder> requestBuilder_;
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfo getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder setRequest(com.mobikok.server.bean.SspEvent.RequestInfo value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder setRequest(
          com.mobikok.server.bean.SspEvent.RequestInfo.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder mergeRequest(com.mobikok.server.bean.SspEvent.RequestInfo value) {
        if (requestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              request_ != null &&
              request_ != com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance()) {
            request_ =
              com.mobikok.server.bean.SspEvent.RequestInfo.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfo.Builder getRequestBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
        }
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      private com.mobikok.server.bean.SspEvent.TradeInfo trade_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder> tradeBuilder_;
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public boolean hasTrade() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfo getTrade() {
        if (tradeBuilder_ == null) {
          return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
        } else {
          return tradeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder setTrade(com.mobikok.server.bean.SspEvent.TradeInfo value) {
        if (tradeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trade_ = value;
          onChanged();
        } else {
          tradeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder setTrade(
          com.mobikok.server.bean.SspEvent.TradeInfo.Builder builderForValue) {
        if (tradeBuilder_ == null) {
          trade_ = builderForValue.build();
          onChanged();
        } else {
          tradeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder mergeTrade(com.mobikok.server.bean.SspEvent.TradeInfo value) {
        if (tradeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              trade_ != null &&
              trade_ != com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance()) {
            trade_ =
              com.mobikok.server.bean.SspEvent.TradeInfo.newBuilder(trade_).mergeFrom(value).buildPartial();
          } else {
            trade_ = value;
          }
          onChanged();
        } else {
          tradeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder clearTrade() {
        if (tradeBuilder_ == null) {
          trade_ = null;
          onChanged();
        } else {
          tradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfo.Builder getTradeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTradeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder() {
        if (tradeBuilder_ != null) {
          return tradeBuilder_.getMessageOrBuilder();
        } else {
          return trade_ == null ?
              com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
        }
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder> 
          getTradeFieldBuilder() {
        if (tradeBuilder_ == null) {
          tradeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder>(
                  getTrade(),
                  getParentForChildren(),
                  isClean());
          trade_ = null;
        }
        return tradeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Impression)
    }

    // @@protoc_insertion_point(class_scope:Impression)
    private static final com.mobikok.server.bean.SspEvent.Impression DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mobikok.server.bean.SspEvent.Impression();
    }

    public static com.mobikok.server.bean.SspEvent.Impression getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Impression>
        PARSER = new com.google.protobuf.AbstractParser<Impression>() {
      public Impression parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Impression(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Impression> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Impression> getParserForType() {
      return PARSER;
    }

    public com.mobikok.server.bean.SspEvent.Impression getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClickOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Click)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    boolean hasClickId();
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    java.lang.String getClickId();
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getClickIdBytes();

    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    boolean hasRequest();
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestInfo getRequest();
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder();

    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    boolean hasTrade();
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.TradeInfo getTrade();
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder();
  }
  /**
   * Protobuf type {@code Click}
   */
  public  static final class Click extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Click)
      ClickOrBuilder {
    // Use Click.newBuilder() to construct.
    private Click(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Click() {
      clickId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Click(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              clickId_ = bs;
              break;
            }
            case 26: {
              com.mobikok.server.bean.SspEvent.RequestInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(com.mobikok.server.bean.SspEvent.RequestInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              com.mobikok.server.bean.SspEvent.TradeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = trade_.toBuilder();
              }
              trade_ = input.readMessage(com.mobikok.server.bean.SspEvent.TradeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trade_);
                trade_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mobikok.server.bean.SspEvent.internal_static_Click_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mobikok.server.bean.SspEvent.internal_static_Click_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mobikok.server.bean.SspEvent.Click.class, com.mobikok.server.bean.SspEvent.Click.Builder.class);
    }

    private int bitField0_;
    public static final int CLICK_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object clickId_;
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public boolean hasClickId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public java.lang.String getClickId() {
      java.lang.Object ref = clickId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clickId_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Click Id
     * </pre>
     *
     * <code>required string click_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getClickIdBytes() {
      java.lang.Object ref = clickId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clickId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REQUEST_FIELD_NUMBER = 3;
    private com.mobikok.server.bean.SspEvent.RequestInfo request_;
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestInfo getRequest() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
    }
    /**
     * <code>optional .RequestInfo request = 3;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
    }

    public static final int TRADE_FIELD_NUMBER = 4;
    private com.mobikok.server.bean.SspEvent.TradeInfo trade_;
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public boolean hasTrade() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.TradeInfo getTrade() {
      return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
    }
    /**
     * <code>optional .TradeInfo trade = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder() {
      return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasClickId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRequest()) {
        if (!getRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clickId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, getTrade());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clickId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTrade());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.mobikok.server.bean.SspEvent.Click)) {
        return super.equals(obj);
      }
      com.mobikok.server.bean.SspEvent.Click other = (com.mobikok.server.bean.SspEvent.Click) obj;

      boolean result = true;
      result = result && (hasClickId() == other.hasClickId());
      if (hasClickId()) {
        result = result && getClickId()
            .equals(other.getClickId());
      }
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      result = result && (hasTrade() == other.hasTrade());
      if (hasTrade()) {
        result = result && getTrade()
            .equals(other.getTrade());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasClickId()) {
        hash = (37 * hash) + CLICK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getClickId().hashCode();
      }
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (hasTrade()) {
        hash = (37 * hash) + TRADE_FIELD_NUMBER;
        hash = (53 * hash) + getTrade().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mobikok.server.bean.SspEvent.Click parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.Click parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Click parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.Click parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Click parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Click parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Click parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Click parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Click parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Click parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mobikok.server.bean.SspEvent.Click prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Click}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Click)
        com.mobikok.server.bean.SspEvent.ClickOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mobikok.server.bean.SspEvent.internal_static_Click_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mobikok.server.bean.SspEvent.internal_static_Click_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mobikok.server.bean.SspEvent.Click.class, com.mobikok.server.bean.SspEvent.Click.Builder.class);
      }

      // Construct using com.mobikok.server.bean.SspEvent.Click.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRequestFieldBuilder();
          getTradeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        clickId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tradeBuilder_ == null) {
          trade_ = null;
        } else {
          tradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mobikok.server.bean.SspEvent.internal_static_Click_descriptor;
      }

      public com.mobikok.server.bean.SspEvent.Click getDefaultInstanceForType() {
        return com.mobikok.server.bean.SspEvent.Click.getDefaultInstance();
      }

      public com.mobikok.server.bean.SspEvent.Click build() {
        com.mobikok.server.bean.SspEvent.Click result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mobikok.server.bean.SspEvent.Click buildPartial() {
        com.mobikok.server.bean.SspEvent.Click result = new com.mobikok.server.bean.SspEvent.Click(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clickId_ = clickId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tradeBuilder_ == null) {
          result.trade_ = trade_;
        } else {
          result.trade_ = tradeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mobikok.server.bean.SspEvent.Click) {
          return mergeFrom((com.mobikok.server.bean.SspEvent.Click)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mobikok.server.bean.SspEvent.Click other) {
        if (other == com.mobikok.server.bean.SspEvent.Click.getDefaultInstance()) return this;
        if (other.hasClickId()) {
          bitField0_ |= 0x00000001;
          clickId_ = other.clickId_;
          onChanged();
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasTrade()) {
          mergeTrade(other.getTrade());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClickId()) {
          return false;
        }
        if (hasRequest()) {
          if (!getRequest().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mobikok.server.bean.SspEvent.Click parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mobikok.server.bean.SspEvent.Click) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object clickId_ = "";
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public boolean hasClickId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public java.lang.String getClickId() {
        java.lang.Object ref = clickId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clickId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClickIdBytes() {
        java.lang.Object ref = clickId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clickId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder setClickId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder clearClickId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clickId_ = getDefaultInstance().getClickId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Click Id
       * </pre>
       *
       * <code>required string click_id = 1;</code>
       */
      public Builder setClickIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }

      private com.mobikok.server.bean.SspEvent.RequestInfo request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder> requestBuilder_;
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfo getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder setRequest(com.mobikok.server.bean.SspEvent.RequestInfo value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder setRequest(
          com.mobikok.server.bean.SspEvent.RequestInfo.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder mergeRequest(com.mobikok.server.bean.SspEvent.RequestInfo value) {
        if (requestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              request_ != null &&
              request_ != com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance()) {
            request_ =
              com.mobikok.server.bean.SspEvent.RequestInfo.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfo.Builder getRequestBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              com.mobikok.server.bean.SspEvent.RequestInfo.getDefaultInstance() : request_;
        }
      }
      /**
       * <code>optional .RequestInfo request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.RequestInfo, com.mobikok.server.bean.SspEvent.RequestInfo.Builder, com.mobikok.server.bean.SspEvent.RequestInfoOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      private com.mobikok.server.bean.SspEvent.TradeInfo trade_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder> tradeBuilder_;
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public boolean hasTrade() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfo getTrade() {
        if (tradeBuilder_ == null) {
          return trade_ == null ? com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
        } else {
          return tradeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder setTrade(com.mobikok.server.bean.SspEvent.TradeInfo value) {
        if (tradeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trade_ = value;
          onChanged();
        } else {
          tradeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder setTrade(
          com.mobikok.server.bean.SspEvent.TradeInfo.Builder builderForValue) {
        if (tradeBuilder_ == null) {
          trade_ = builderForValue.build();
          onChanged();
        } else {
          tradeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder mergeTrade(com.mobikok.server.bean.SspEvent.TradeInfo value) {
        if (tradeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              trade_ != null &&
              trade_ != com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance()) {
            trade_ =
              com.mobikok.server.bean.SspEvent.TradeInfo.newBuilder(trade_).mergeFrom(value).buildPartial();
          } else {
            trade_ = value;
          }
          onChanged();
        } else {
          tradeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public Builder clearTrade() {
        if (tradeBuilder_ == null) {
          trade_ = null;
          onChanged();
        } else {
          tradeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfo.Builder getTradeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTradeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder getTradeOrBuilder() {
        if (tradeBuilder_ != null) {
          return tradeBuilder_.getMessageOrBuilder();
        } else {
          return trade_ == null ?
              com.mobikok.server.bean.SspEvent.TradeInfo.getDefaultInstance() : trade_;
        }
      }
      /**
       * <code>optional .TradeInfo trade = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder> 
          getTradeFieldBuilder() {
        if (tradeBuilder_ == null) {
          tradeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.TradeInfo, com.mobikok.server.bean.SspEvent.TradeInfo.Builder, com.mobikok.server.bean.SspEvent.TradeInfoOrBuilder>(
                  getTrade(),
                  getParentForChildren(),
                  isClean());
          trade_ = null;
        }
        return tradeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Click)
    }

    // @@protoc_insertion_point(class_scope:Click)
    private static final com.mobikok.server.bean.SspEvent.Click DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mobikok.server.bean.SspEvent.Click();
    }

    public static com.mobikok.server.bean.SspEvent.Click getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Click>
        PARSER = new com.google.protobuf.AbstractParser<Click>() {
      public Click parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Click(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Click> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Click> getParserForType() {
      return PARSER;
    }

    public com.mobikok.server.bean.SspEvent.Click getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Event)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>required .Event.EVENTTYPE event_type = 2;</code>
     */
    boolean hasEventType();
    /**
     * <code>required .Event.EVENTTYPE event_type = 2;</code>
     */
    com.mobikok.server.bean.SspEvent.Event.EVENTTYPE getEventType();

    /**
     * <code>required string event_key = 3;</code>
     */
    boolean hasEventKey();
    /**
     * <code>required string event_key = 3;</code>
     */
    java.lang.String getEventKey();
    /**
     * <code>required string event_key = 3;</code>
     */
    com.google.protobuf.ByteString
        getEventKeyBytes();

    /**
     * <code>optional .Request request = 4;</code>
     */
    boolean hasRequest();
    /**
     * <code>optional .Request request = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.Request getRequest();
    /**
     * <code>optional .Request request = 4;</code>
     */
    com.mobikok.server.bean.SspEvent.RequestOrBuilder getRequestOrBuilder();

    /**
     * <code>optional .Send send = 5;</code>
     */
    boolean hasSend();
    /**
     * <code>optional .Send send = 5;</code>
     */
    com.mobikok.server.bean.SspEvent.Send getSend();
    /**
     * <code>optional .Send send = 5;</code>
     */
    com.mobikok.server.bean.SspEvent.SendOrBuilder getSendOrBuilder();

    /**
     * <code>optional .WinNotice win_notice = 6;</code>
     */
    boolean hasWinNotice();
    /**
     * <code>optional .WinNotice win_notice = 6;</code>
     */
    com.mobikok.server.bean.SspEvent.WinNotice getWinNotice();
    /**
     * <code>optional .WinNotice win_notice = 6;</code>
     */
    com.mobikok.server.bean.SspEvent.WinNoticeOrBuilder getWinNoticeOrBuilder();

    /**
     * <code>optional .Impression impression = 7;</code>
     */
    boolean hasImpression();
    /**
     * <code>optional .Impression impression = 7;</code>
     */
    com.mobikok.server.bean.SspEvent.Impression getImpression();
    /**
     * <code>optional .Impression impression = 7;</code>
     */
    com.mobikok.server.bean.SspEvent.ImpressionOrBuilder getImpressionOrBuilder();

    /**
     * <code>optional .Click click = 8;</code>
     */
    boolean hasClick();
    /**
     * <code>optional .Click click = 8;</code>
     */
    com.mobikok.server.bean.SspEvent.Click getClick();
    /**
     * <code>optional .Click click = 8;</code>
     */
    com.mobikok.server.bean.SspEvent.ClickOrBuilder getClickOrBuilder();
  }
  /**
   * Protobuf type {@code Event}
   */
  public  static final class Event extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Event)
      EventOrBuilder {
    // Use Event.newBuilder() to construct.
    private Event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Event() {
      timestamp_ = 0L;
      eventType_ = 1;
      eventKey_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Event(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.mobikok.server.bean.SspEvent.Event.EVENTTYPE value = com.mobikok.server.bean.SspEvent.Event.EVENTTYPE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                eventType_ = rawValue;
              }
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              eventKey_ = bs;
              break;
            }
            case 34: {
              com.mobikok.server.bean.SspEvent.Request.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(com.mobikok.server.bean.SspEvent.Request.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.mobikok.server.bean.SspEvent.Send.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = send_.toBuilder();
              }
              send_ = input.readMessage(com.mobikok.server.bean.SspEvent.Send.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(send_);
                send_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              com.mobikok.server.bean.SspEvent.WinNotice.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = winNotice_.toBuilder();
              }
              winNotice_ = input.readMessage(com.mobikok.server.bean.SspEvent.WinNotice.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(winNotice_);
                winNotice_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              com.mobikok.server.bean.SspEvent.Impression.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = impression_.toBuilder();
              }
              impression_ = input.readMessage(com.mobikok.server.bean.SspEvent.Impression.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(impression_);
                impression_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              com.mobikok.server.bean.SspEvent.Click.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = click_.toBuilder();
              }
              click_ = input.readMessage(com.mobikok.server.bean.SspEvent.Click.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(click_);
                click_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mobikok.server.bean.SspEvent.internal_static_Event_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mobikok.server.bean.SspEvent.internal_static_Event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mobikok.server.bean.SspEvent.Event.class, com.mobikok.server.bean.SspEvent.Event.Builder.class);
    }

    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * Protobuf enum {@code Event.EVENTTYPE}
     */
    public enum EVENTTYPE
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       *请求
       * </pre>
       *
       * <code>REQUEST = 1;</code>
       */
      REQUEST(1),
      /**
       * <pre>
       *下发
       * </pre>
       *
       * <code>SEND = 2;</code>
       */
      SEND(2),
      /**
       * <pre>
       *中签
       * </pre>
       *
       * <code>WINNOTICE = 3;</code>
       */
      WINNOTICE(3),
      /**
       * <pre>
       *展示
       * </pre>
       *
       * <code>IMPRESSION = 4;</code>
       */
      IMPRESSION(4),
      /**
       * <pre>
       *点击
       * </pre>
       *
       * <code>CLICK = 5;</code>
       */
      CLICK(5),
      ;

      /**
       * <pre>
       *请求
       * </pre>
       *
       * <code>REQUEST = 1;</code>
       */
      public static final int REQUEST_VALUE = 1;
      /**
       * <pre>
       *下发
       * </pre>
       *
       * <code>SEND = 2;</code>
       */
      public static final int SEND_VALUE = 2;
      /**
       * <pre>
       *中签
       * </pre>
       *
       * <code>WINNOTICE = 3;</code>
       */
      public static final int WINNOTICE_VALUE = 3;
      /**
       * <pre>
       *展示
       * </pre>
       *
       * <code>IMPRESSION = 4;</code>
       */
      public static final int IMPRESSION_VALUE = 4;
      /**
       * <pre>
       *点击
       * </pre>
       *
       * <code>CLICK = 5;</code>
       */
      public static final int CLICK_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EVENTTYPE valueOf(int value) {
        return forNumber(value);
      }

      public static EVENTTYPE forNumber(int value) {
        switch (value) {
          case 1: return REQUEST;
          case 2: return SEND;
          case 3: return WINNOTICE;
          case 4: return IMPRESSION;
          case 5: return CLICK;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EVENTTYPE>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EVENTTYPE> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EVENTTYPE>() {
              public EVENTTYPE findValueByNumber(int number) {
                return EVENTTYPE.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.mobikok.server.bean.SspEvent.Event.getDescriptor().getEnumTypes().get(0);
      }

      private static final EVENTTYPE[] VALUES = values();

      public static EVENTTYPE valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EVENTTYPE(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Event.EVENTTYPE)
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int EVENT_TYPE_FIELD_NUMBER = 2;
    private int eventType_;
    /**
     * <code>required .Event.EVENTTYPE event_type = 2;</code>
     */
    public boolean hasEventType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .Event.EVENTTYPE event_type = 2;</code>
     */
    public com.mobikok.server.bean.SspEvent.Event.EVENTTYPE getEventType() {
      com.mobikok.server.bean.SspEvent.Event.EVENTTYPE result = com.mobikok.server.bean.SspEvent.Event.EVENTTYPE.valueOf(eventType_);
      return result == null ? com.mobikok.server.bean.SspEvent.Event.EVENTTYPE.REQUEST : result;
    }

    public static final int EVENT_KEY_FIELD_NUMBER = 3;
    private volatile java.lang.Object eventKey_;
    /**
     * <code>required string event_key = 3;</code>
     */
    public boolean hasEventKey() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string event_key = 3;</code>
     */
    public java.lang.String getEventKey() {
      java.lang.Object ref = eventKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string event_key = 3;</code>
     */
    public com.google.protobuf.ByteString
        getEventKeyBytes() {
      java.lang.Object ref = eventKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REQUEST_FIELD_NUMBER = 4;
    private com.mobikok.server.bean.SspEvent.Request request_;
    /**
     * <code>optional .Request request = 4;</code>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .Request request = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.Request getRequest() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.Request.getDefaultInstance() : request_;
    }
    /**
     * <code>optional .Request request = 4;</code>
     */
    public com.mobikok.server.bean.SspEvent.RequestOrBuilder getRequestOrBuilder() {
      return request_ == null ? com.mobikok.server.bean.SspEvent.Request.getDefaultInstance() : request_;
    }

    public static final int SEND_FIELD_NUMBER = 5;
    private com.mobikok.server.bean.SspEvent.Send send_;
    /**
     * <code>optional .Send send = 5;</code>
     */
    public boolean hasSend() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .Send send = 5;</code>
     */
    public com.mobikok.server.bean.SspEvent.Send getSend() {
      return send_ == null ? com.mobikok.server.bean.SspEvent.Send.getDefaultInstance() : send_;
    }
    /**
     * <code>optional .Send send = 5;</code>
     */
    public com.mobikok.server.bean.SspEvent.SendOrBuilder getSendOrBuilder() {
      return send_ == null ? com.mobikok.server.bean.SspEvent.Send.getDefaultInstance() : send_;
    }

    public static final int WIN_NOTICE_FIELD_NUMBER = 6;
    private com.mobikok.server.bean.SspEvent.WinNotice winNotice_;
    /**
     * <code>optional .WinNotice win_notice = 6;</code>
     */
    public boolean hasWinNotice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .WinNotice win_notice = 6;</code>
     */
    public com.mobikok.server.bean.SspEvent.WinNotice getWinNotice() {
      return winNotice_ == null ? com.mobikok.server.bean.SspEvent.WinNotice.getDefaultInstance() : winNotice_;
    }
    /**
     * <code>optional .WinNotice win_notice = 6;</code>
     */
    public com.mobikok.server.bean.SspEvent.WinNoticeOrBuilder getWinNoticeOrBuilder() {
      return winNotice_ == null ? com.mobikok.server.bean.SspEvent.WinNotice.getDefaultInstance() : winNotice_;
    }

    public static final int IMPRESSION_FIELD_NUMBER = 7;
    private com.mobikok.server.bean.SspEvent.Impression impression_;
    /**
     * <code>optional .Impression impression = 7;</code>
     */
    public boolean hasImpression() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .Impression impression = 7;</code>
     */
    public com.mobikok.server.bean.SspEvent.Impression getImpression() {
      return impression_ == null ? com.mobikok.server.bean.SspEvent.Impression.getDefaultInstance() : impression_;
    }
    /**
     * <code>optional .Impression impression = 7;</code>
     */
    public com.mobikok.server.bean.SspEvent.ImpressionOrBuilder getImpressionOrBuilder() {
      return impression_ == null ? com.mobikok.server.bean.SspEvent.Impression.getDefaultInstance() : impression_;
    }

    public static final int CLICK_FIELD_NUMBER = 8;
    private com.mobikok.server.bean.SspEvent.Click click_;
    /**
     * <code>optional .Click click = 8;</code>
     */
    public boolean hasClick() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .Click click = 8;</code>
     */
    public com.mobikok.server.bean.SspEvent.Click getClick() {
      return click_ == null ? com.mobikok.server.bean.SspEvent.Click.getDefaultInstance() : click_;
    }
    /**
     * <code>optional .Click click = 8;</code>
     */
    public com.mobikok.server.bean.SspEvent.ClickOrBuilder getClickOrBuilder() {
      return click_ == null ? com.mobikok.server.bean.SspEvent.Click.getDefaultInstance() : click_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEventType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEventKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRequest()) {
        if (!getRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSend()) {
        if (!getSend().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWinNotice()) {
        if (!getWinNotice().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasImpression()) {
        if (!getImpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasClick()) {
        if (!getClick().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, eventType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, eventKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getRequest());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getSend());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getWinNotice());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, getImpression());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, getClick());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, eventType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, eventKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getRequest());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSend());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getWinNotice());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getImpression());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getClick());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.mobikok.server.bean.SspEvent.Event)) {
        return super.equals(obj);
      }
      com.mobikok.server.bean.SspEvent.Event other = (com.mobikok.server.bean.SspEvent.Event) obj;

      boolean result = true;
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && (hasEventType() == other.hasEventType());
      if (hasEventType()) {
        result = result && eventType_ == other.eventType_;
      }
      result = result && (hasEventKey() == other.hasEventKey());
      if (hasEventKey()) {
        result = result && getEventKey()
            .equals(other.getEventKey());
      }
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      result = result && (hasSend() == other.hasSend());
      if (hasSend()) {
        result = result && getSend()
            .equals(other.getSend());
      }
      result = result && (hasWinNotice() == other.hasWinNotice());
      if (hasWinNotice()) {
        result = result && getWinNotice()
            .equals(other.getWinNotice());
      }
      result = result && (hasImpression() == other.hasImpression());
      if (hasImpression()) {
        result = result && getImpression()
            .equals(other.getImpression());
      }
      result = result && (hasClick() == other.hasClick());
      if (hasClick()) {
        result = result && getClick()
            .equals(other.getClick());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestamp());
      }
      if (hasEventType()) {
        hash = (37 * hash) + EVENT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + eventType_;
      }
      if (hasEventKey()) {
        hash = (37 * hash) + EVENT_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getEventKey().hashCode();
      }
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (hasSend()) {
        hash = (37 * hash) + SEND_FIELD_NUMBER;
        hash = (53 * hash) + getSend().hashCode();
      }
      if (hasWinNotice()) {
        hash = (37 * hash) + WIN_NOTICE_FIELD_NUMBER;
        hash = (53 * hash) + getWinNotice().hashCode();
      }
      if (hasImpression()) {
        hash = (37 * hash) + IMPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getImpression().hashCode();
      }
      if (hasClick()) {
        hash = (37 * hash) + CLICK_FIELD_NUMBER;
        hash = (53 * hash) + getClick().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mobikok.server.bean.SspEvent.Event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.Event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mobikok.server.bean.SspEvent.Event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mobikok.server.bean.SspEvent.Event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mobikok.server.bean.SspEvent.Event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mobikok.server.bean.SspEvent.Event prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Event}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Event)
        com.mobikok.server.bean.SspEvent.EventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mobikok.server.bean.SspEvent.internal_static_Event_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mobikok.server.bean.SspEvent.internal_static_Event_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mobikok.server.bean.SspEvent.Event.class, com.mobikok.server.bean.SspEvent.Event.Builder.class);
      }

      // Construct using com.mobikok.server.bean.SspEvent.Event.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRequestFieldBuilder();
          getSendFieldBuilder();
          getWinNoticeFieldBuilder();
          getImpressionFieldBuilder();
          getClickFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000002);
        eventKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (sendBuilder_ == null) {
          send_ = null;
        } else {
          sendBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (winNoticeBuilder_ == null) {
          winNotice_ = null;
        } else {
          winNoticeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (impressionBuilder_ == null) {
          impression_ = null;
        } else {
          impressionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (clickBuilder_ == null) {
          click_ = null;
        } else {
          clickBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mobikok.server.bean.SspEvent.internal_static_Event_descriptor;
      }

      public com.mobikok.server.bean.SspEvent.Event getDefaultInstanceForType() {
        return com.mobikok.server.bean.SspEvent.Event.getDefaultInstance();
      }

      public com.mobikok.server.bean.SspEvent.Event build() {
        com.mobikok.server.bean.SspEvent.Event result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mobikok.server.bean.SspEvent.Event buildPartial() {
        com.mobikok.server.bean.SspEvent.Event result = new com.mobikok.server.bean.SspEvent.Event(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventType_ = eventType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventKey_ = eventKey_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (sendBuilder_ == null) {
          result.send_ = send_;
        } else {
          result.send_ = sendBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (winNoticeBuilder_ == null) {
          result.winNotice_ = winNotice_;
        } else {
          result.winNotice_ = winNoticeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (impressionBuilder_ == null) {
          result.impression_ = impression_;
        } else {
          result.impression_ = impressionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (clickBuilder_ == null) {
          result.click_ = click_;
        } else {
          result.click_ = clickBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mobikok.server.bean.SspEvent.Event) {
          return mergeFrom((com.mobikok.server.bean.SspEvent.Event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mobikok.server.bean.SspEvent.Event other) {
        if (other == com.mobikok.server.bean.SspEvent.Event.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasEventType()) {
          setEventType(other.getEventType());
        }
        if (other.hasEventKey()) {
          bitField0_ |= 0x00000004;
          eventKey_ = other.eventKey_;
          onChanged();
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasSend()) {
          mergeSend(other.getSend());
        }
        if (other.hasWinNotice()) {
          mergeWinNotice(other.getWinNotice());
        }
        if (other.hasImpression()) {
          mergeImpression(other.getImpression());
        }
        if (other.hasClick()) {
          mergeClick(other.getClick());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimestamp()) {
          return false;
        }
        if (!hasEventType()) {
          return false;
        }
        if (!hasEventKey()) {
          return false;
        }
        if (hasRequest()) {
          if (!getRequest().isInitialized()) {
            return false;
          }
        }
        if (hasSend()) {
          if (!getSend().isInitialized()) {
            return false;
          }
        }
        if (hasWinNotice()) {
          if (!getWinNotice().isInitialized()) {
            return false;
          }
        }
        if (hasImpression()) {
          if (!getImpression().isInitialized()) {
            return false;
          }
        }
        if (hasClick()) {
          if (!getClick().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mobikok.server.bean.SspEvent.Event parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mobikok.server.bean.SspEvent.Event) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private int eventType_ = 1;
      /**
       * <code>required .Event.EVENTTYPE event_type = 2;</code>
       */
      public boolean hasEventType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .Event.EVENTTYPE event_type = 2;</code>
       */
      public com.mobikok.server.bean.SspEvent.Event.EVENTTYPE getEventType() {
        com.mobikok.server.bean.SspEvent.Event.EVENTTYPE result = com.mobikok.server.bean.SspEvent.Event.EVENTTYPE.valueOf(eventType_);
        return result == null ? com.mobikok.server.bean.SspEvent.Event.EVENTTYPE.REQUEST : result;
      }
      /**
       * <code>required .Event.EVENTTYPE event_type = 2;</code>
       */
      public Builder setEventType(com.mobikok.server.bean.SspEvent.Event.EVENTTYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        eventType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .Event.EVENTTYPE event_type = 2;</code>
       */
      public Builder clearEventType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventType_ = 1;
        onChanged();
        return this;
      }

      private java.lang.Object eventKey_ = "";
      /**
       * <code>required string event_key = 3;</code>
       */
      public boolean hasEventKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string event_key = 3;</code>
       */
      public java.lang.String getEventKey() {
        java.lang.Object ref = eventKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventKey_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string event_key = 3;</code>
       */
      public com.google.protobuf.ByteString
          getEventKeyBytes() {
        java.lang.Object ref = eventKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string event_key = 3;</code>
       */
      public Builder setEventKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        eventKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string event_key = 3;</code>
       */
      public Builder clearEventKey() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventKey_ = getDefaultInstance().getEventKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string event_key = 3;</code>
       */
      public Builder setEventKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        eventKey_ = value;
        onChanged();
        return this;
      }

      private com.mobikok.server.bean.SspEvent.Request request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.Request, com.mobikok.server.bean.SspEvent.Request.Builder, com.mobikok.server.bean.SspEvent.RequestOrBuilder> requestBuilder_;
      /**
       * <code>optional .Request request = 4;</code>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .Request request = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.Request getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? com.mobikok.server.bean.SspEvent.Request.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Request request = 4;</code>
       */
      public Builder setRequest(com.mobikok.server.bean.SspEvent.Request value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Request request = 4;</code>
       */
      public Builder setRequest(
          com.mobikok.server.bean.SspEvent.Request.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Request request = 4;</code>
       */
      public Builder mergeRequest(com.mobikok.server.bean.SspEvent.Request value) {
        if (requestBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              request_ != null &&
              request_ != com.mobikok.server.bean.SspEvent.Request.getDefaultInstance()) {
            request_ =
              com.mobikok.server.bean.SspEvent.Request.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Request request = 4;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .Request request = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.Request.Builder getRequestBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Request request = 4;</code>
       */
      public com.mobikok.server.bean.SspEvent.RequestOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              com.mobikok.server.bean.SspEvent.Request.getDefaultInstance() : request_;
        }
      }
      /**
       * <code>optional .Request request = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.Request, com.mobikok.server.bean.SspEvent.Request.Builder, com.mobikok.server.bean.SspEvent.RequestOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.Request, com.mobikok.server.bean.SspEvent.Request.Builder, com.mobikok.server.bean.SspEvent.RequestOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      private com.mobikok.server.bean.SspEvent.Send send_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.Send, com.mobikok.server.bean.SspEvent.Send.Builder, com.mobikok.server.bean.SspEvent.SendOrBuilder> sendBuilder_;
      /**
       * <code>optional .Send send = 5;</code>
       */
      public boolean hasSend() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .Send send = 5;</code>
       */
      public com.mobikok.server.bean.SspEvent.Send getSend() {
        if (sendBuilder_ == null) {
          return send_ == null ? com.mobikok.server.bean.SspEvent.Send.getDefaultInstance() : send_;
        } else {
          return sendBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Send send = 5;</code>
       */
      public Builder setSend(com.mobikok.server.bean.SspEvent.Send value) {
        if (sendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          send_ = value;
          onChanged();
        } else {
          sendBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .Send send = 5;</code>
       */
      public Builder setSend(
          com.mobikok.server.bean.SspEvent.Send.Builder builderForValue) {
        if (sendBuilder_ == null) {
          send_ = builderForValue.build();
          onChanged();
        } else {
          sendBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .Send send = 5;</code>
       */
      public Builder mergeSend(com.mobikok.server.bean.SspEvent.Send value) {
        if (sendBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              send_ != null &&
              send_ != com.mobikok.server.bean.SspEvent.Send.getDefaultInstance()) {
            send_ =
              com.mobikok.server.bean.SspEvent.Send.newBuilder(send_).mergeFrom(value).buildPartial();
          } else {
            send_ = value;
          }
          onChanged();
        } else {
          sendBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .Send send = 5;</code>
       */
      public Builder clearSend() {
        if (sendBuilder_ == null) {
          send_ = null;
          onChanged();
        } else {
          sendBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .Send send = 5;</code>
       */
      public com.mobikok.server.bean.SspEvent.Send.Builder getSendBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSendFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Send send = 5;</code>
       */
      public com.mobikok.server.bean.SspEvent.SendOrBuilder getSendOrBuilder() {
        if (sendBuilder_ != null) {
          return sendBuilder_.getMessageOrBuilder();
        } else {
          return send_ == null ?
              com.mobikok.server.bean.SspEvent.Send.getDefaultInstance() : send_;
        }
      }
      /**
       * <code>optional .Send send = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.Send, com.mobikok.server.bean.SspEvent.Send.Builder, com.mobikok.server.bean.SspEvent.SendOrBuilder> 
          getSendFieldBuilder() {
        if (sendBuilder_ == null) {
          sendBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.Send, com.mobikok.server.bean.SspEvent.Send.Builder, com.mobikok.server.bean.SspEvent.SendOrBuilder>(
                  getSend(),
                  getParentForChildren(),
                  isClean());
          send_ = null;
        }
        return sendBuilder_;
      }

      private com.mobikok.server.bean.SspEvent.WinNotice winNotice_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.WinNotice, com.mobikok.server.bean.SspEvent.WinNotice.Builder, com.mobikok.server.bean.SspEvent.WinNoticeOrBuilder> winNoticeBuilder_;
      /**
       * <code>optional .WinNotice win_notice = 6;</code>
       */
      public boolean hasWinNotice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .WinNotice win_notice = 6;</code>
       */
      public com.mobikok.server.bean.SspEvent.WinNotice getWinNotice() {
        if (winNoticeBuilder_ == null) {
          return winNotice_ == null ? com.mobikok.server.bean.SspEvent.WinNotice.getDefaultInstance() : winNotice_;
        } else {
          return winNoticeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .WinNotice win_notice = 6;</code>
       */
      public Builder setWinNotice(com.mobikok.server.bean.SspEvent.WinNotice value) {
        if (winNoticeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          winNotice_ = value;
          onChanged();
        } else {
          winNoticeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .WinNotice win_notice = 6;</code>
       */
      public Builder setWinNotice(
          com.mobikok.server.bean.SspEvent.WinNotice.Builder builderForValue) {
        if (winNoticeBuilder_ == null) {
          winNotice_ = builderForValue.build();
          onChanged();
        } else {
          winNoticeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .WinNotice win_notice = 6;</code>
       */
      public Builder mergeWinNotice(com.mobikok.server.bean.SspEvent.WinNotice value) {
        if (winNoticeBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              winNotice_ != null &&
              winNotice_ != com.mobikok.server.bean.SspEvent.WinNotice.getDefaultInstance()) {
            winNotice_ =
              com.mobikok.server.bean.SspEvent.WinNotice.newBuilder(winNotice_).mergeFrom(value).buildPartial();
          } else {
            winNotice_ = value;
          }
          onChanged();
        } else {
          winNoticeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .WinNotice win_notice = 6;</code>
       */
      public Builder clearWinNotice() {
        if (winNoticeBuilder_ == null) {
          winNotice_ = null;
          onChanged();
        } else {
          winNoticeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .WinNotice win_notice = 6;</code>
       */
      public com.mobikok.server.bean.SspEvent.WinNotice.Builder getWinNoticeBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getWinNoticeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .WinNotice win_notice = 6;</code>
       */
      public com.mobikok.server.bean.SspEvent.WinNoticeOrBuilder getWinNoticeOrBuilder() {
        if (winNoticeBuilder_ != null) {
          return winNoticeBuilder_.getMessageOrBuilder();
        } else {
          return winNotice_ == null ?
              com.mobikok.server.bean.SspEvent.WinNotice.getDefaultInstance() : winNotice_;
        }
      }
      /**
       * <code>optional .WinNotice win_notice = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.WinNotice, com.mobikok.server.bean.SspEvent.WinNotice.Builder, com.mobikok.server.bean.SspEvent.WinNoticeOrBuilder> 
          getWinNoticeFieldBuilder() {
        if (winNoticeBuilder_ == null) {
          winNoticeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.WinNotice, com.mobikok.server.bean.SspEvent.WinNotice.Builder, com.mobikok.server.bean.SspEvent.WinNoticeOrBuilder>(
                  getWinNotice(),
                  getParentForChildren(),
                  isClean());
          winNotice_ = null;
        }
        return winNoticeBuilder_;
      }

      private com.mobikok.server.bean.SspEvent.Impression impression_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.Impression, com.mobikok.server.bean.SspEvent.Impression.Builder, com.mobikok.server.bean.SspEvent.ImpressionOrBuilder> impressionBuilder_;
      /**
       * <code>optional .Impression impression = 7;</code>
       */
      public boolean hasImpression() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .Impression impression = 7;</code>
       */
      public com.mobikok.server.bean.SspEvent.Impression getImpression() {
        if (impressionBuilder_ == null) {
          return impression_ == null ? com.mobikok.server.bean.SspEvent.Impression.getDefaultInstance() : impression_;
        } else {
          return impressionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Impression impression = 7;</code>
       */
      public Builder setImpression(com.mobikok.server.bean.SspEvent.Impression value) {
        if (impressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          impression_ = value;
          onChanged();
        } else {
          impressionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Impression impression = 7;</code>
       */
      public Builder setImpression(
          com.mobikok.server.bean.SspEvent.Impression.Builder builderForValue) {
        if (impressionBuilder_ == null) {
          impression_ = builderForValue.build();
          onChanged();
        } else {
          impressionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Impression impression = 7;</code>
       */
      public Builder mergeImpression(com.mobikok.server.bean.SspEvent.Impression value) {
        if (impressionBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              impression_ != null &&
              impression_ != com.mobikok.server.bean.SspEvent.Impression.getDefaultInstance()) {
            impression_ =
              com.mobikok.server.bean.SspEvent.Impression.newBuilder(impression_).mergeFrom(value).buildPartial();
          } else {
            impression_ = value;
          }
          onChanged();
        } else {
          impressionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Impression impression = 7;</code>
       */
      public Builder clearImpression() {
        if (impressionBuilder_ == null) {
          impression_ = null;
          onChanged();
        } else {
          impressionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .Impression impression = 7;</code>
       */
      public com.mobikok.server.bean.SspEvent.Impression.Builder getImpressionBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getImpressionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Impression impression = 7;</code>
       */
      public com.mobikok.server.bean.SspEvent.ImpressionOrBuilder getImpressionOrBuilder() {
        if (impressionBuilder_ != null) {
          return impressionBuilder_.getMessageOrBuilder();
        } else {
          return impression_ == null ?
              com.mobikok.server.bean.SspEvent.Impression.getDefaultInstance() : impression_;
        }
      }
      /**
       * <code>optional .Impression impression = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.Impression, com.mobikok.server.bean.SspEvent.Impression.Builder, com.mobikok.server.bean.SspEvent.ImpressionOrBuilder> 
          getImpressionFieldBuilder() {
        if (impressionBuilder_ == null) {
          impressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.Impression, com.mobikok.server.bean.SspEvent.Impression.Builder, com.mobikok.server.bean.SspEvent.ImpressionOrBuilder>(
                  getImpression(),
                  getParentForChildren(),
                  isClean());
          impression_ = null;
        }
        return impressionBuilder_;
      }

      private com.mobikok.server.bean.SspEvent.Click click_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.Click, com.mobikok.server.bean.SspEvent.Click.Builder, com.mobikok.server.bean.SspEvent.ClickOrBuilder> clickBuilder_;
      /**
       * <code>optional .Click click = 8;</code>
       */
      public boolean hasClick() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .Click click = 8;</code>
       */
      public com.mobikok.server.bean.SspEvent.Click getClick() {
        if (clickBuilder_ == null) {
          return click_ == null ? com.mobikok.server.bean.SspEvent.Click.getDefaultInstance() : click_;
        } else {
          return clickBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Click click = 8;</code>
       */
      public Builder setClick(com.mobikok.server.bean.SspEvent.Click value) {
        if (clickBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          click_ = value;
          onChanged();
        } else {
          clickBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .Click click = 8;</code>
       */
      public Builder setClick(
          com.mobikok.server.bean.SspEvent.Click.Builder builderForValue) {
        if (clickBuilder_ == null) {
          click_ = builderForValue.build();
          onChanged();
        } else {
          clickBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .Click click = 8;</code>
       */
      public Builder mergeClick(com.mobikok.server.bean.SspEvent.Click value) {
        if (clickBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              click_ != null &&
              click_ != com.mobikok.server.bean.SspEvent.Click.getDefaultInstance()) {
            click_ =
              com.mobikok.server.bean.SspEvent.Click.newBuilder(click_).mergeFrom(value).buildPartial();
          } else {
            click_ = value;
          }
          onChanged();
        } else {
          clickBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .Click click = 8;</code>
       */
      public Builder clearClick() {
        if (clickBuilder_ == null) {
          click_ = null;
          onChanged();
        } else {
          clickBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .Click click = 8;</code>
       */
      public com.mobikok.server.bean.SspEvent.Click.Builder getClickBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getClickFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Click click = 8;</code>
       */
      public com.mobikok.server.bean.SspEvent.ClickOrBuilder getClickOrBuilder() {
        if (clickBuilder_ != null) {
          return clickBuilder_.getMessageOrBuilder();
        } else {
          return click_ == null ?
              com.mobikok.server.bean.SspEvent.Click.getDefaultInstance() : click_;
        }
      }
      /**
       * <code>optional .Click click = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mobikok.server.bean.SspEvent.Click, com.mobikok.server.bean.SspEvent.Click.Builder, com.mobikok.server.bean.SspEvent.ClickOrBuilder> 
          getClickFieldBuilder() {
        if (clickBuilder_ == null) {
          clickBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mobikok.server.bean.SspEvent.Click, com.mobikok.server.bean.SspEvent.Click.Builder, com.mobikok.server.bean.SspEvent.ClickOrBuilder>(
                  getClick(),
                  getParentForChildren(),
                  isClean());
          click_ = null;
        }
        return clickBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Event)
    }

    // @@protoc_insertion_point(class_scope:Event)
    private static final com.mobikok.server.bean.SspEvent.Event DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mobikok.server.bean.SspEvent.Event();
    }

    public static com.mobikok.server.bean.SspEvent.Event getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Event>
        PARSER = new com.google.protobuf.AbstractParser<Event>() {
      public Event parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Event(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Event> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Event> getParserForType() {
      return PARSER;
    }

    public com.mobikok.server.bean.SspEvent.Event getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RequestInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RequestInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TradeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TradeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Send_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Send_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WinNotice_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_WinNotice_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Impression_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Impression_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Click_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Click_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Event_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Event_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013event.proto\"|\n\013RequestInfo\022\024\n\014publishe" +
      "r_id\030\001 \002(\003\022\016\n\006app_id\030\002 \002(\003\022\022\n\ncountry_id" +
      "\030\003 \002(\003\022\022\n\ncarrier_id\030\004 \002(\003\022\n\n\002ip\030\005 \002(\t\022\023" +
      "\n\013raw_request\030\006 \002(\t\"\312\001\n\tTradeInfo\022\034\n\tdea" +
      "l_type\030\013 \001(\0162\t.DEALTYPE\022\016\n\006dsp_id\030\n \001(\003\022" +
      "\021\n\tbid_price\030\014 \001(\001\022\023\n\013clear_price\030\026 \001(\001\022" +
      "\023\n\013media_price\030\r \001(\001\022\026\n\016win_notice_url\030\017" +
      " \001(\t\022\021\n\tclick_url\030\020 \001(\t\022\021\n\tpixel_url\030\021 \001" +
      "(\t\022\024\n\014raw_response\030\025 \001(\t\"U\n\007Request\022\020\n\010c" +
      "lick_id\030\001 \002(\t\022\035\n\007request\030\003 \001(\0132\014.Request",
      "Info\022\031\n\005trade\030\004 \001(\0132\n.TradeInfo\"R\n\004Send\022" +
      "\020\n\010click_id\030\001 \002(\t\022\035\n\007request\030\003 \001(\0132\014.Req" +
      "uestInfo\022\031\n\005trade\030\004 \001(\0132\n.TradeInfo\"W\n\tW" +
      "inNotice\022\020\n\010click_id\030\001 \002(\t\022\035\n\007request\030\003 " +
      "\001(\0132\014.RequestInfo\022\031\n\005trade\030\004 \001(\0132\n.Trade" +
      "Info\"X\n\nImpression\022\020\n\010click_id\030\001 \002(\t\022\035\n\007" +
      "request\030\003 \001(\0132\014.RequestInfo\022\031\n\005trade\030\004 \001" +
      "(\0132\n.TradeInfo\"S\n\005Click\022\020\n\010click_id\030\001 \002(" +
      "\t\022\035\n\007request\030\003 \001(\0132\014.RequestInfo\022\031\n\005trad" +
      "e\030\004 \001(\0132\n.TradeInfo\"\251\002\n\005Event\022\021\n\ttimesta",
      "mp\030\001 \002(\003\022$\n\nevent_type\030\002 \002(\0162\020.Event.EVE" +
      "NTTYPE\022\021\n\tevent_key\030\003 \002(\t\022\031\n\007request\030\004 \001" +
      "(\0132\010.Request\022\023\n\004send\030\005 \001(\0132\005.Send\022\036\n\nwin" +
      "_notice\030\006 \001(\0132\n.WinNotice\022\037\n\nimpression\030" +
      "\007 \001(\0132\013.Impression\022\025\n\005click\030\010 \001(\0132\006.Clic" +
      "k\"L\n\tEVENTTYPE\022\013\n\007REQUEST\020\001\022\010\n\004SEND\020\002\022\r\n" +
      "\tWINNOTICE\020\003\022\016\n\nIMPRESSION\020\004\022\t\n\005CLICK\020\005*" +
      "\034\n\010DEALTYPE\022\007\n\003CPC\020\001\022\007\n\003CPM\020\002B#\n\027com.mob" +
      "ikok.server.beanB\010SspEvent"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_RequestInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_RequestInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RequestInfo_descriptor,
        new java.lang.String[] { "PublisherId", "AppId", "CountryId", "CarrierId", "Ip", "RawRequest", });
    internal_static_TradeInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_TradeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TradeInfo_descriptor,
        new java.lang.String[] { "DealType", "DspId", "BidPrice", "ClearPrice", "MediaPrice", "WinNoticeUrl", "ClickUrl", "PixelUrl", "RawResponse", });
    internal_static_Request_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Request_descriptor,
        new java.lang.String[] { "ClickId", "Request", "Trade", });
    internal_static_Send_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Send_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Send_descriptor,
        new java.lang.String[] { "ClickId", "Request", "Trade", });
    internal_static_WinNotice_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_WinNotice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_WinNotice_descriptor,
        new java.lang.String[] { "ClickId", "Request", "Trade", });
    internal_static_Impression_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Impression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Impression_descriptor,
        new java.lang.String[] { "ClickId", "Request", "Trade", });
    internal_static_Click_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_Click_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Click_descriptor,
        new java.lang.String[] { "ClickId", "Request", "Trade", });
    internal_static_Event_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_Event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Event_descriptor,
        new java.lang.String[] { "Timestamp", "EventType", "EventKey", "Request", "Send", "WinNotice", "Impression", "Click", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
